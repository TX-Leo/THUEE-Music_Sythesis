function varargout = music_12_export(varargin)
% MUSIC_12_EXPORT MATLAB code for music_12_export.fig
%      MUSIC_12_EXPORT, by itself, creates a new MUSIC_12_EXPORT or raises the existing
%      singleton*.
%
%      H = MUSIC_12_EXPORT returns the handle to a new MUSIC_12_EXPORT or the handle to
%      the existing singleton*.
%
%      MUSIC_12_EXPORT('CALLBACK',hObject,eventData,handles,...) calls the local
%      function named CALLBACK in MUSIC_12_EXPORT.M with the given input arguments.
%
%      MUSIC_12_EXPORT('Property','Value',...) creates a new MUSIC_12_EXPORT or raises the
%      existing singleton*.  Starting from the left, property value pairs are
%      applied to the GUI before music_12_export_OpeningFcn gets called.  An
%      unrecognized property name or invalid value makes property application
%      stop.  All inputs are passed to music_12_export_OpeningFcn via varargin.
%
%      *See GUI Options on GUIDE's Tools menu.  Choose "GUI allows only one
%      instance to run (singleton)".
%
% See also: GUIDE, GUIDATA, GUIHANDLES

% Edit the above text to modify the response to help music_12_export

% Last Modified by GUIDE v2.5 20-Jul-2022 23:12:00

% Begin initialization code - DO NOT EDIT
gui_Singleton = 1;
gui_State = struct('gui_Name',       mfilename, ...
                   'gui_Singleton',  gui_Singleton, ...
                   'gui_OpeningFcn', @music_12_export_OpeningFcn, ...
                   'gui_OutputFcn',  @music_12_export_OutputFcn, ...
                   'gui_LayoutFcn',  @music_12_export_LayoutFcn, ...
                   'gui_Callback',   []);
if nargin && ischar(varargin{1})
    gui_State.gui_Callback = str2func(varargin{1});
end

if nargout
    [varargout{1:nargout}] = gui_mainfcn(gui_State, varargin{:});
else
    gui_mainfcn(gui_State, varargin{:});
end
% End initialization code - DO NOT EDIT


% --- Executes just before music_12_export is made visible.
function music_12_export_OpeningFcn(hObject, eventdata, handles, varargin)
% This function has no output args, see OutputFcn.
% hObject    handle to figure
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)
% varargin   command line arguments to music_12_export (see VARARGIN)

% Choose default command line output for music_12_export
handles.output = hObject;
% Update handles structure
guidata(hObject, handles);

% UIWAIT makes music_12_export wait for user response (see UIRESUME)
% uiwait(handles.figure1);


% --- Outputs from this function are returned to the command line.
function varargout = music_12_export_OutputFcn(hObject, eventdata, handles)
% varargout  cell array for returning output args (see VARARGOUT);
% hObject    handle to figure
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)

% Get default command line output from handles structure
varargout{1} = handles.output;


% --- Executes on button press in add_audio.
function add_audio_Callback(hObject, eventdata, handles)
% hObject    handle to add_audio (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)
    [file,path,~] = uigetfile('*.wav','请选择要识别的音频'); % Open the file selection dialog box
    if isequal(file,0)
       disp('User selected Cancel');
    else
       disp(['User selected ', fullfile(path,file)]);
    end
    file_path = fullfile(path,file);
    handles.audio_file_path = file_path;
    guidata(hObject, handles);

    output_string = file_path;
    set(handles.add_audio_file_path, 'String', output_string);


% --- Executes on button press in start_sampling.
function start_sampling_Callback(hObject, eventdata, handles)
% hObject    handle to start_sampling (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)
    file_path = handles.audio_file_path;
    % cmd = char("get_component(""" + file_path + """);");
    % disp(cmd);
    % [freq, comp] = evalin('base', cmd); % Computes MATLAB expressions in the specified workspace.
    [freq, comp] = get_component(file_path);
    handles.freq = freq;
    handles.comp = comp;
    guidata(hObject, handles);
    output_string = cell(length(freq), 1);
    for i = 1 : 1 : length(freq)
        output_string{i} = char(string(num2str(freq(i))) + ": [" + string(num2str(comp{i}')) + "]");
    end
    set(handles.harmonic_component, 'String', output_string);

% --- Executes during object creation, after setting all properties.
function uipanel1_CreateFcn(hObject, eventdata, handles)
% hObject    handle to uipanel1 (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    empty - handles not created until after all CreateFcns called


% --- Executes on selection change in add_audio_file_path.
function add_audio_file_path_Callback(hObject, eventdata, handles)
% hObject    handle to add_audio_file_path (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)

% Hints: contents = cellstr(get(hObject,'String')) returns add_audio_file_path contents as cell array
%        contents{get(hObject,'Value')} returns selected item from add_audio_file_path


% --- Executes during object creation, after setting all properties.
function add_audio_file_path_CreateFcn(hObject, eventdata, handles)
% hObject    handle to add_audio_file_path (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    empty - handles not created until after all CreateFcns called

% Hint: listbox controls usually have a white background on Windows.
%       See ISPC and COMPUTER.
if ispc && isequal(get(hObject,'BackgroundColor'), get(0,'defaultUicontrolBackgroundColor'))
    set(hObject,'BackgroundColor','white');
end


% --- Executes on button press in play_audio.
function play_audio_Callback(hObject, eventdata, handles)
% hObject    handle to play_audio (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)
    file_path = handles.audio_file_path;
    [tone_sampling, frequency_sampling] = audioread(file_path);
    sound(tone_sampling, frequency_sampling);                           %play sampled tones
    axes(handles.audio_wave);
    plot([0 : length(tone_sampling) - 1] / frequency_sampling, tone_sampling);
    title("sound waveform");

% --- Executes on button press in compose_music.
function compose_music_Callback(hObject, eventdata, handles)
% hObject    handle to compose_music (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)


% --- Executes on button press in import_music_table.
function import_music_table_Callback(hObject, eventdata, handles)
    % hObject    handle to import_music_table (see GCBO)
    % eventdata  reserved - to be defined in a future version of MATLAB
    % handles    structure with handles and user data (see GUIDATA)
% --- Executes on selection change in harmonic_component.
    [file,path,~] = uigetfile('*.xlsx','请选择要识别的表格'); % Open the file selection dialog box
    if isequal(file,0)
    disp('User selected Cancel');
    else
    disp(['User selected ', fullfile(path,file)]);
    end
    table_file_path = fullfile(path,file);
    output_string = table_file_path;
    set(handles.table_file_path, 'String', output_string);

    [song_pitch,song_length] = my_process_music_data_table(table_file_path);
    song = [song_pitch,song_length];
    set(handles.music_table,'Data',song);%将data中的文件以Data的形式设置在句柄为uitable1的表格中。

    handles.song_pitch = song_pitch;
    handles.song_length = song_length;
    guidata(hObject, handles);

% --- Executes on button press in input_parameter_and_generate_music.
function input_parameter_and_generate_music_Callback(hObject, eventdata, handles)
    % hObject    handle to input_parameter_and_generate_music (see GCBO)
    % eventdata  reserved - to be defined in a future version of MATLAB
    % handles    structure with handles and user data (see GUIDATA)
    song_pitch = handles.song_pitch;
    song_length = handles.song_length;
    title_of_music = get(handles.title_of_music, 'String');
    main_tune = get(handles.tune, 'String');
    length_of_beat = str2num(get(handles.length_of_beat, 'String'));
    frequency_sampling = str2num(get(handles.frequency_sampling, 'String'));% frequency_sampling = 8000;
    harmonic = [1,0.2,0.1,0.4];
    tone_sampling = my_play_music(song_pitch,song_length, main_tune,length_of_beat,frequency_sampling,harmonic)

    handles.tone_sampling = tone_sampling;
    guidata(hObject, handles);

% --- Executes on button press in generate_wave_and_play_music.
function generate_wave_and_play_music_Callback(hObject, eventdata, handles)
    % hObject    handle to generate_wave_and_play_music (see GCBO)
    % eventdata  reserved - to be defined in a future version of MATLAB
    % handles    structure with handles and user data (see GUIDATA)
    tone_sampling = handles.tone_sampling ;
    frequency_sampling = str2num(get(handles.frequency_sampling, 'String'));

    offset = str2num(get(handles.offset, 'String'));
    axes(handles.sound_wave);
    plot([0 : length(tone_sampling) - 1] / frequency_sampling * offset, tone_sampling);              %draw sound waveform
    title("sound waveform");
    sound(tone_sampling, frequency_sampling * offset);                                               %play sampled tones
    audiowrite('music_12_the_greatest_work.wav', tone_sampling, frequency_sampling * offset);                     %store .wav

function harmonic_component_Callback(hObject, eventdata, handles)
% hObject    handle to harmonic_component (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)

% Hints: contents = cellstr(get(hObject,'String')) returns harmonic_component contents as cell array
%        contents{get(hObject,'Value')} returns selected item from harmonic_component


% --- Executes during object creation, after setting all properties.
function harmonic_component_CreateFcn(hObject, eventdata, handles)
% hObject    handle to harmonic_component (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    empty - handles not created until after all CreateFcns called

% Hint: listbox controls usually have a white background on Windows.
%       See ISPC and COMPUTER.
if ispc && isequal(get(hObject,'BackgroundColor'), get(0,'defaultUicontrolBackgroundColor'))
    set(hObject,'BackgroundColor','white');
end


% --- Executes during object creation, after setting all properties.
function audio_wave_CreateFcn(hObject, eventdata, handles)
% hObject    handle to audio_wave (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    empty - handles not created until after all CreateFcns called

% Hint: place code in OpeningFcn to populate audio_wave

% --- Executes during object creation, after setting all properties.
function sound_wave_CreateFcn(hObject, eventdata, handles)
    % hObject    handle to audio_wave (see GCBO)
    % eventdata  reserved - to be defined in a future version of MATLAB
    % handles    empty - handles not created until after all CreateFcns called
    
    % Hint: place code in OpeningFcn to populate audio_wave

% --- Executes when entered data in editable cell(s) in music_table.
function music_table_CellEditCallback(hObject, eventdata, handles)
% hObject    handle to music_table (see GCBO)
% eventdata  structure with the following fields (see MATLAB.UI.CONTROL.TABLE)
%	Indices: row and column indices of the cell(s) edited
%	PreviousData: previous data for the cell(s) edited
%	EditData: string(s) entered by the user
%	NewData: EditData or its converted form set on the Data property. Empty if Data was not changed
%	Error: error string when failed to convert EditData to appropriate value for Data
% handles    structure with handles and user data (see GUIDATA)

% --- Executes on selection change in table_file_path.
function table_file_path_Callback(hObject, eventdata, handles)
% hObject    handle to table_file_path (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)

% Hints: contents = cellstr(get(hObject,'String')) returns table_file_path contents as cell array
%        contents{get(hObject,'Value')} returns selected item from table_file_path


% --- Executes during object creation, after setting all properties.
function table_file_path_CreateFcn(hObject, eventdata, handles)
% hObject    handle to table_file_path (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    empty - handles not created until after all CreateFcns called

% Hint: listbox controls usually have a white background on Windows.
%       See ISPC and COMPUTER.
if ispc && isequal(get(hObject,'BackgroundColor'), get(0,'defaultUicontrolBackgroundColor'))
    set(hObject,'BackgroundColor','white');
end


% --- Executes during object creation, after setting all properties.
function music_table_CreateFcn(hObject, eventdata, handles)
% hObject    handle to music_table (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    empty - handles not created until after all CreateFcns called



function tune_Callback(hObject, eventdata, handles)
% hObject    handle to tune (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)

% Hints: get(hObject,'String') returns contents of tune as text
%        str2double(get(hObject,'String')) returns contents of tune as a double


% --- Executes during object creation, after setting all properties.
function tune_CreateFcn(hObject, eventdata, handles)
% hObject    handle to tune (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    empty - handles not created until after all CreateFcns called

% Hint: edit controls usually have a white background on Windows.
%       See ISPC and COMPUTER.
if ispc && isequal(get(hObject,'BackgroundColor'), get(0,'defaultUicontrolBackgroundColor'))
    set(hObject,'BackgroundColor','white');
end



function length_of_beat_Callback(hObject, eventdata, handles)
% hObject    handle to length_of_beat (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)

% Hints: get(hObject,'String') returns contents of length_of_beat as text
%        str2double(get(hObject,'String')) returns contents of length_of_beat as a double


% --- Executes during object creation, after setting all properties.
function length_of_beat_CreateFcn(hObject, eventdata, handles)
% hObject    handle to length_of_beat (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    empty - handles not created until after all CreateFcns called

% Hint: edit controls usually have a white background on Windows.
%       See ISPC and COMPUTER.
if ispc && isequal(get(hObject,'BackgroundColor'), get(0,'defaultUicontrolBackgroundColor'))
    set(hObject,'BackgroundColor','white');
end



function offset_Callback(hObject, eventdata, handles)
% hObject    handle to offset (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)

% Hints: get(hObject,'String') returns contents of offset as text
%        str2double(get(hObject,'String')) returns contents of offset as a double


% --- Executes during object creation, after setting all properties.
function offset_CreateFcn(hObject, eventdata, handles)
% hObject    handle to offset (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    empty - handles not created until after all CreateFcns called

% Hint: edit controls usually have a white background on Windows.
%       See ISPC and COMPUTER.
if ispc && isequal(get(hObject,'BackgroundColor'), get(0,'defaultUicontrolBackgroundColor'))
    set(hObject,'BackgroundColor','white');
end

function title_of_music_Callback(hObject, eventdata, handles)
% hObject    handle to title_of_music (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)

% Hints: get(hObject,'String') returns contents of title_of_music as text
%        str2double(get(hObject,'String')) returns contents of title_of_music as a double


% --- Executes during object creation, after setting all properties.
function title_of_music_CreateFcn(hObject, eventdata, handles)
% hObject    handle to title_of_music (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    empty - handles not created until after all CreateFcns called

% Hint: edit controls usually have a white background on Windows.
%       See ISPC and COMPUTER.
if ispc && isequal(get(hObject,'BackgroundColor'), get(0,'defaultUicontrolBackgroundColor'))
    set(hObject,'BackgroundColor','white');
end

function frequency_sampling_Callback(hObject, eventdata, handles)
    % hObject    handle to frequency_sampling (see GCBO)
    % eventdata  reserved - to be defined in a future version of MATLAB
    % handles    structure with handles and user data (see GUIDATA)
    
    % Hints: get(hObject,'String') returns contents of frequency_sampling as text
    %        str2double(get(hObject,'String')) returns contents of frequency_sampling as a double
    
    
    % --- Executes during object creation, after setting all properties.
    function frequency_sampling_CreateFcn(hObject, eventdata, handles)
    % hObject    handle to frequency_sampling (see GCBO)
    % eventdata  reserved - to be defined in a future version of MATLAB
    % handles    empty - handles not created until after all CreateFcns called
    
    % Hint: edit controls usually have a white background on Windows.
    %       See ISPC and COMPUTER.
    if ispc && isequal(get(hObject,'BackgroundColor'), get(0,'defaultUicontrolBackgroundColor'))
        set(hObject,'BackgroundColor','white');
    end
function [song_pitch,song_length] = my_process_music_data_table(file_path)
% 第一列分辨是bass(1)还是alto(2)还是treble(3)还是pause(0)
% 3	7	0.5
% 3	3	0.5
% 3	2	0.75
% 3	3	0.25
% 3	1	1
% 0	0	0.5
% 3	1	0.5
% 2	7	0.5
% 3	1	0.5
% 3	3	0.75
% 3	2	0.25
% 2	6	1
% 0	0	0.5
% 2	3	0.5
% 3	1	0.5
% 2	7	0.75
% 2	6	2
    data=xlsread(file_path);%读取文件datafile.xlsx，并存入data中
    song_pitch = [];
    song_length = data(:,3); % 取出第三列（音长）
    song_pitch_1 = data(:,1);% 取出第一列
    song_pitch_2 = data(:,2);% 取出第一列
    for i = 1:length(song_pitch_1)
        if song_pitch_1(i) == 1
            song_pitch(i) = song_pitch_2 (i)
        elseif song_pitch_1(i) == 2
            song_pitch(i) = song_pitch_2 (i) + 7
        elseif song_pitch_1(i) == 3
            song_pitch(i) = song_pitch_2 (i) + 14
        elseif song_pitch_1(i) == 0
            song_pitch(i) = 22
        else
            error('    Input error!');
        end
    end
    song_pitch = song_pitch';


function tone_sampling = my_play_music(song_pitch,song_length, main_tune,length_of_beat,frequency_sampling,harmonic)

    tunes = get_tunes(main_tune);

    tone_sampling = [];
    [~, padding] = envelope(0);
    last_padding = 0;
    for i = 1 : 1 : length(song_length)
        f = tunes(song_pitch(i));                                                               %The pitch of each tone
        length_of_each_tone = song_length(i) * length_of_beat;                                  %The length of each tone
        length_of_each_tone_padding = frequency_sampling * length_of_each_tone * padding;
        t = linspace(0, length_of_each_tone * padding - 1 / frequency_sampling, length_of_each_tone_padding)';
        tone_sampling_temp = zeros(size(t));
        for j = 1 : 1 : length(harmonic)
            tone_sampling_temp =tone_sampling_temp + harmonic(j) * sin(2 * pi * j * f * t);
        end
        tone_sampling_temp = envelope(t/length_of_each_tone) .* tone_sampling_temp;
        if (last_padding == 0)
            tone_sampling = [tone_sampling; tone_sampling_temp];
        else
            tone_sampling = [tone_sampling(1:end-last_padding); tone_sampling(end-last_padding)+tone_sampling_temp(1:last_padding); tone_sampling_temp(last_padding+1:end)];
        end
        last_padding = round(length_of_each_tone_padding - frequency_sampling * length_of_each_tone);
    end

    % plot([0 : length(tone_sampling) - 1] / frequency_sampling, tone_sampling);
    % title("sound waveform");

    % sound(tone_sampling, frequency_sampling);                       %play sampled tones
    % audiowrite('music_05.wav', tone_sampling, frequency_sampling);  %store .wav
    
function [y, beta_param] = envelope(x)
    alpha_param = 0.075;
    gamma_param = 0.75;
    beta_param = 1.1;
    delta_param = 1 + (gamma_param-alpha_param)./(alpha_param-beta_param);
    A = -1./(alpha_param.^2);
    B = (delta_param-1)./(gamma_param-alpha_param).^2;
    C = (gamma_param-alpha_param)./(gamma_param-beta_param) .* B;

    y = ...
        (x >= 0 & x < alpha_param) .* (A .* (x-alpha_param).^2 + 1) + ...
        (x >= alpha_param & x < gamma_param) .* (B .* (x - alpha_param).^2 + 1) + ...
        (x >= gamma_param & x < beta_param) .* C .* (x - beta_param).^2;
    
function tunes = get_tunes(major)
    tunes = zeros([7 4]);
    ratio = 2^(1/12);

    switch (major)
        case 'A'
            base_A = 1;
        case 'B'
            base_A = 7;
        case 'C'
            base_A = 6;
        case 'D'
            base_A = 5;
        case 'E'
            base_A = 4;
        case 'F'
            base_A = 3;
        case 'G'
            base_A = 2;
        otherwise
            error('Error: The parameter major is invalid!');
    end

    tunes(base_A, 1) = 220;
    tunes(base_A, 2) = 440;
    tunes(base_A, 3) = 880;

    switch base_A
        case 2
            scale_diffs = [-2, 0, 2, 3, 5, 7, 8]';
        case 3
            scale_diffs = [-4, -2, 0, 2, 3, 5, 7]';
        case 4
            scale_diffs = [-5, -4, -2, 0, 2, 3, 5]';
        case 5
            scale_diffs = [-7, -5, -4, -2, 0, 2, 3]';
        case 6
            scale_diffs = [-9, -7, -5, -4, -2, 0, 2]';
        case 7
            scale_diffs = [-10, -9, -7, -5, -4, -2, 0]';
        case 1
            base_A = 1;
            tunes = tunes / 2;
            scale_diffs = [0, 2, 3, 5, 7, 8, 10]';
        otherwise
            error('Error: Unknown error!');
    end

    real_diffs = ratio.^scale_diffs;

    for i = 1 : 7
        tunes(i, 1:end) = tunes(base_A, 1:end) .* real_diffs(i);
    end

function [base_freq_record, component_record] = get_component(wave_path)

    [x, Fs] = audioread(wave_path);
    
    x = mean(x, 2);
    max_Fs = 12000;
    if Fs > max_Fs
        x = resample(x, max_Fs, Fs);
        Fs = max_Fs;
    end
    clear max_Fs;

    % Split music

    disp('Begin to split music...');
    disp('    Processing music...');
    h_wait_bar = waitbar(0, 'Processing music...');

    y1 = abs(x);
    y2WndLen = round(Fs / 10);
    y2 = conv(y1, hanning(y2WndLen));
    y2 = y2(round(y2WndLen/2):end);
    y3 = diff(y2);
    y4 = max(y3, 0);
    y5WndLen = round(Fs / 8);
    y5 = conv(y4, hanning(y5WndLen));
    y5 = y5(round(y5WndLen/2):end);

    figure(1);
    subplot(6, 1, 1);
    plot([0:length(x)-1] / Fs, x);
    title('\itx');
    subplot(6, 1, 2);
    plot([0:length(y1)-1] / Fs, y1);
    title('{\ity}_1');
    subplot(6, 1, 3);
    plot([0:length(y2)-1] / Fs, y2);
    title('{\ity}_2');
    subplot(6, 1, 4);
    plot([0:length(y3)-1] / Fs, y3);
    title('{\ity}_3');
    subplot(6, 1, 5);
    plot([0:length(y4)-1] / Fs, y4);
    title('{\ity}_4');
    subplot(6, 1, 6);
    plot([0:length(y5)-1] / Fs, y5);
    title('{\ity}_5');

    clear y1 y2 y3 y4 y2WndLen y5WndLen;
    waitbar(1, h_wait_bar);
    disp('    OK.');
    disp('    Finding split point...');
    waitbar(0, h_wait_bar, 'Finding split point...');

    dy5 = diff(y5);
    is_positive = (dy5(1) > 0);
    primary_find_idx = [];
    for i = 2 : 1 : length(dy5)
        if ((dy5(i) > 0) ~= is_positive)
            is_positive = ~is_positive;
            if is_positive == false
                primary_find_idx = [primary_find_idx; i];
            end
        end
    end
    waitbar(1 / 3, h_wait_bar);

    min_find_len = 3;
    if length(primary_find_idx) < min_find_len * 2
        error('    Error: The music is too short!');
    end

    primary_find_val = y5(primary_find_idx);
    primary_sort_res = sort(primary_find_val, 'descend');
    level = mean(primary_sort_res(1:min_find_len)) ./ 20;
    secondary_find_idx = primary_find_idx(y5(primary_find_idx) >= level);
    
    waitbar(2 / 3, h_wait_bar);

    thirdary_find_idx = secondary_find_idx;
    min_n_time_inteval = 0.05 * Fs;
    i = 2;
    del_cnt = 0;
    while i <= length(thirdary_find_idx) - del_cnt
        if thirdary_find_idx(i) - thirdary_find_idx(i - 1) < min_n_time_inteval
            if y5(thirdary_find_idx(i - 1)) < y5(thirdary_find_idx(i))
                thirdary_find_idx(i - 1) = thirdary_find_idx(i);
            end
            thirdary_find_idx(i:end-1) = thirdary_find_idx(i+1:end);
            del_cnt = del_cnt + 1;
        else
            i = i + 1;
        end
    end
    thirdary_find_idx = thirdary_find_idx(1:end-del_cnt);

    find_idx = thirdary_find_idx;

    subplot(6, 1, 6);
    hold on
    plot((find_idx-1)/Fs, y5(find_idx), 'ro');
    subplot(6, 1, 1);
    hold on
    plot((find_idx-1)/Fs, zeros([length(find_idx), 1]), 'yo');

    clear y5 dy5 primary_find_val primary_sort_res primary_find_idx secondary_find_idx;
    waitbar(1, h_wait_bar);
    close(h_wait_bar);
    disp('    OK.');
    disp('Spliting music finished!');
    disp('Begin to find basic frequency...');
    disp('    Preparing...');
    h_wait_bar = waitbar(0, 'Preparing for finding...');

    amp_tolerant_rate_of_base = 0.1;

    base_freqs = [];
    base_freq_idxs = [];
    Xs = cell([0 0]);
    T1s = [];

    disp('    OK.');
    disp('    Finding...');
    waitbar(0, h_wait_bar, 'Finding basic frequencies...');

    % Find basic freqency in each piece of music

    for i = 2 : 1 : length(find_idx)

        this_b = find_idx(i - 1);
        this_e = find_idx(i);
        this_x = x(this_b : this_e);
        this_repeat = 10;
        for j = 1 : 1 : this_repeat
            this_x = [this_x; this_x];
        end
        this_repeat = 2^this_repeat;
        this_X = abs(fft(this_x));
        T1 = (this_e - this_b + 1) * this_repeat / Fs;

        dc_comp = this_X(1);  % Exclude DC component
        this_X = this_X(2:end);
        [max_val, max_idx] = max(this_X);
        amp_level = max_val / 3;
        over_level = (this_X > amp_level);
        [~, first_idx] = max(over_level);

        if first_idx == max_idx
            base_freq_idx = max_idx;
        else

            candidate_idx = 0;
            candidate_times = 0;
            candidate_times_ret = 0;

            while first_idx < max_idx

                % disp("* " + first_idx/T1);

                tmp_times = max_idx / first_idx;

                % disp(tmp_times);

                tmp_ret = abs(tmp_times - round(tmp_times));
                if tmp_times < 20 && tmp_ret < 0.1
                    if (tmp_times < candidate_times && candidate_idx ~= 0)
                        break;
                    end
                    if (candidate_idx == 0 || tmp_ret < candidate_times_ret)
                        should_be_candidate = true;
                        %{
                        if tmp_times ~= 1
                            time_of_this_over_times = 0;
                            time_of_max_over_times = 0;
                            is_times = @(p, q) abs((p/q) - round(p/q)) < 0.1;
                            for k = 1 : 1 : 15 % amp_tolerant_rate_of_base
                                time_of_this = k * first_idx;
                                tolerant_idxs = round(first_idx * amp_tolerant_rate_of_base);
                                if is_times(time_of_this, max_idx)
                                    if max(this_X(time_of_this-tolerant_idxs : time_of_this+tolerant_idxs)) > amp_level
                                        time_of_max_over_times = time_of_max_over_times + 1;
                                    end
                                else
                                    if max(this_X(time_of_this-tolerant_idxs : time_of_this+tolerant_idxs)) > amp_level
                                        time_of_this_over_times = time_of_this_over_times + 1;
                                    end
                                end
                            end

                            if time_of_max_over_times >= round(time_of_this_over_times*time_of_this_over_times*0.5-time_of_this_over_times*0.5+3)-0.05;
                                hould_be_candidate = false;
                            else 
                            end
                        end
                        %}
                        if should_be_candidate == true
                            candidate_idx = first_idx;
                            candidate_times = round(tmp_times);
                            candidate_times_ret = tmp_ret;
                        end
                    end
                end
                [val, tmp_first_idx] = max(over_level(first_idx + 1 : end));
                first_idx = tmp_first_idx + first_idx;
            end

            if candidate_idx >= max_idx || candidate_times == 1 || candidate_idx == 0
                base_freq_idx = max_idx;
            else
                base_freq_idx = candidate_idx;
            end
        end

        % disp("    Origin: " + (i-1) + " ~ " + i + ": " + (base_freq_idx / T1));

        base_freqs = [base_freqs; base_freq_idx / T1];
        base_freq_idxs = [base_freq_idxs; base_freq_idx];
        Xs = [Xs; this_X];
        T1s = [T1s; T1];

        % sound(this_x(1:min(Fs, end)), Fs);

        %{
        figure(2);
        this_X = [dc_comp; this_X];
        plot([0:length(this_X)-1] * (1/T1), this_X);
        disp((i - 1) + " ~ " + i + ": ");
        pause
        %}
        
        waitbar(i / length(find_idx), h_wait_bar);
    end

    clear this_b this_e this_x this_X this_repeat;
    clear over_level candidate_idx candidate_times candidate_times_ret;
    waitbar(1, h_wait_bar);
    disp('    OK.');
    disp('    Checking legitimacy of frequencies found...');
    waitbar(0, h_wait_bar, 'Checking legitimacy...');

    min_freq = 110;
    max_freq = 1500;
    freq_too_low = base_freqs < min_freq;
    freq_too_high = base_freqs > max_freq;
    legal_freq = ~(freq_too_low | freq_too_high);
    if sum(freq_too_low | freq_too_high) ~= 0
        disp('    Warning: A basic frequency is not in the list and will be discarded!');
    end
    base_freqs = base_freqs(legal_freq);
    base_freq_idxs = base_freq_idxs(legal_freq);
    Xs = Xs(legal_freq);
    T1s = T1s(legal_freq);
    std_freqs = generate_std_freqs(min_freq, max_freq);
    modified_base_freqs = nearest_search(std_freqs, base_freqs);

    clear freq_too_low freq_too_high legal_greq;
    waitbar(1, h_wait_bar);
    disp('    OK.');
    disp('Finding basic frequency finished!');
    disp('Begin to get components...');
    disp('    Preparing...');
    waitbar(0, h_wait_bar, 'Preparing for getting components...');

    % Sort by freqs

    [modified_base_freqs, sort_freq_idx] = sort(modified_base_freqs);
    base_freqs = base_freqs(sort_freq_idx);
    base_freq_idxs = base_freq_idxs(sort_freq_idx);
    Xs = Xs(sort_freq_idx);
    T1s = T1s(sort_freq_idx);

    % Get parameters

    component_record = cell(length(std_freqs), 2); % Column 1: freq; column 2: components
    component_record(:, 1) = num2cell(std_freqs);
    component_record_itr = 1;

    is_float_equal = @(f, g) abs(f - g) / g < 1e-5;

    clear sort_freq_idx;
    disp('    OK.');
    disp('    Getting...');
    waitbar(0, h_wait_bar, 'Getting components...');

    for i = 1 : 1 : length(modified_base_freqs)
        max_times = floor(length(Xs{i}) / 2 / base_freq_idxs(i));
        k = [1 : 1 : max_times]';
        mid_freqs = base_freq_idxs(i) * k;
        tolerant_idxs = round(base_freq_idxs(i) * amp_tolerant_rate_of_base);
        left_freqs = mid_freqs - tolerant_idxs;
        right_freqs = mid_freqs + tolerant_idxs;

        component_res = zeros([max_times, 1]);
        for j = 1 : 1 : max_times
            component_res(j) = max(Xs{i}(left_freqs(j):right_freqs(j)));
        end
        component_res  = component_res / component_res(1);

        while is_float_equal(modified_base_freqs(i), component_record{component_record_itr, 1}) == false
            component_record_itr = component_record_itr + 1;
            if component_record_itr > length(std_freqs)
                error('    Error: unknown error!');
            end
        end

        tmp_org = component_record{component_record_itr, 2};
        % disp('=============');
        % disp(tmp_org);
        if size(tmp_org, 2) == 0
            component_record{component_record_itr, 2} = component_res;
        else
            if size(tmp_org, 1) < length(component_res)
                tmp_org = [tmp_org; zeros([ length(component_res) - size(tmp_org, 1), size(tmp_org, 2)])];
            elseif size(tmp_org, 1) > length(component_res)
                component_res = [component_res; zeros([size(tmp_org, 1) - length(component_res), 1])];
            end
            component_record{component_record_itr, 2} = [tmp_org, component_res];
        end
        % disp('-----');
        % disp(component_record{component_record_itr, 2});
        waitbar(i / length(modified_base_freqs), h_wait_bar);
    end

    clear Xs;
    waitbar(1, h_wait_bar);
    disp('    OK.');
    disp('    Cleaning...');
    waitbar(0, h_wait_bar, 'Cleaning...');

    legal_component = logical(zeros([length(std_freqs), 1]));
    for i = 1 : 1 : length(std_freqs)
        if size(component_record{i, 2}, 2) ~= 0
            legal_component(i) = true;
        end
        waitbar(i / length(std_freqs), h_wait_bar);
    end
    component_record = component_record(legal_component, :);

    %{
    for i = 1 : 1 : 11
        figure(i + 2);
        hold on
        tmp = component_record{i,2};
        for j = 1 : 1 : size(tmp, 2)
            plot(component_record{i,2}(:, j));
        end
        title(string(component_record{i,1}) + " Hz");
    end
    %}

    clear legal_component;
    waitbar(1, h_wait_bar);
    disp('    OK.');
    disp('    Merging multidata...');
    waitbar(0, h_wait_bar, 'Merging multidata...');

    base_freq_record = cell2mat(component_record(:, 1));
    component_record = component_record(:, 2);

    for i = 1 : 1 : length(component_record)
        component_record{i} = mean(component_record{i}, 2);
        waitbar(i / length(component_record), h_wait_bar);
    end

    waitbar(1, h_wait_bar);
    waitbar(1, h_wait_bar, 'Finished!');
    disp('    OK.');
    disp('Getting components finished!');
    close(h_wait_bar);

function std_freqs = generate_std_freqs(base_freq, max_freq)

    std_freqs = [];
    freq_itr = base_freq;
    ratio = 2^(1/12);
    while freq_itr <= max_freq
        std_freqs = [std_freqs; freq_itr];
        freq_itr = freq_itr * ratio;
    end

function [val, idx] = nearest_search(list, target, is_sorted_list)
% nearest_search: find the nearest element

    if nargin < 3
        is_sorted_list = true;
    elseif is_sorted_list == false
        if issorted(list) == false
            list = sort(list);
        end
    end

    if length(list) == 0
       error('The list is empty!');
    end

    if length(target) == 0
        val = [];
        idx = [];
    else
        idx = zeros(size(target));
        for i = 1 : 1 : length(target)
            [~, idx(i)] = min(abs(list - target(i)));
        end
        val = list(idx);
    end


% --- Creates and returns a handle to the GUI figure. 
function h1 = music_12_export_LayoutFcn(policy)
% policy - create a new figure or use a singleton. 'new' or 'reuse'.

persistent hsingleton;
if strcmpi(policy, 'reuse') & ishandle(hsingleton)
    h1 = hsingleton;
    return;
end
load music_12_export.mat


appdata = [];
appdata.GUIDEOptions = mat{1};
appdata.lastValidTag = 'figure1';
appdata.GUIDELayoutEditor = [];
appdata.initTags = struct(...
    'handle', [], ...
    'tag', 'figure1');

h1 = figure(...
'PaperUnits','inches',...
'Units','characters',...
'Position',[135.8 19.0512820512821 327.857142857143 65.3333333333333],...
'Visible',get(0,'defaultfigureVisible'),...
'Color',[0.823529411764706 0.756862745098039 0.831372549019608],...
'CurrentAxesMode','manual',...
'IntegerHandle','off',...
'Colormap',get(0,'defaultfigureColormap'),...
'MenuBar','none',...
'ToolBar',get(0,'defaultfigureToolBar'),...
'ToolBarMode',get(0,'defaultfigureToolBarMode'),...
'Name','music_12',...
'NumberTitle','off',...
'HandleVisibility','callback',...
'Tag','figure1',...
'Resize','off',...
'PaperPosition',get(0,'defaultfigurePaperPosition'),...
'PaperSize',[8.5 11],...
'PaperSizeMode',get(0,'defaultfigurePaperSizeMode'),...
'PaperType','usletter',...
'PaperTypeMode',get(0,'defaultfigurePaperTypeMode'),...
'PaperUnitsMode',get(0,'defaultfigurePaperUnitsMode'),...
'ScreenPixelsPerInchMode','manual',...
'CreateFcn', {@local_CreateFcn, blanks(0), appdata} );

appdata = [];
appdata.lastValidTag = 'audio_wave';

h2 = axes(...
'Parent',h1,...
'FontUnits',get(0,'defaultaxesFontUnits'),...
'Units','characters',...
'CameraPosition',[0.5 0.5 9.16025403784439],...
'CameraPositionMode',get(0,'defaultaxesCameraPositionMode'),...
'CameraTarget',[0.5 0.5 0.5],...
'CameraTargetMode',get(0,'defaultaxesCameraTargetMode'),...
'CameraViewAngle',6.60861036031192,...
'CameraViewAngleMode',get(0,'defaultaxesCameraViewAngleMode'),...
'AmbientLightColor',[0.870588235294118 0.572549019607843 0.494117647058824],...
'PlotBoxAspectRatio',[1 0.112864077669903 0.112864077669903],...
'PlotBoxAspectRatioMode',get(0,'defaultaxesPlotBoxAspectRatioMode'),...
'FontName','Helvetica',...
'FontNameMode',get(0,'defaultaxesFontNameMode'),...
'Colormap',[0.2422 0.1504 0.6603;0.2444 0.1534 0.6728;0.2464 0.1569 0.6847;0.2484 0.1607 0.6961;0.2503 0.1648 0.7071;0.2522 0.1689 0.7179;0.254 0.1732 0.7286;0.2558 0.1773 0.7393;0.2576 0.1814 0.7501;0.2594 0.1854 0.761;0.2611 0.1893 0.7719;0.2628 0.1932 0.7828;0.2645 0.1972 0.7937;0.2661 0.2011 0.8043;0.2676 0.2052 0.8148;0.2691 0.2094 0.8249;0.2704 0.2138 0.8346;0.2717 0.2184 0.8439;0.2729 0.2231 0.8528;0.274 0.228 0.8612;0.2749 0.233 0.8692;0.2758 0.2382 0.8767;0.2766 0.2435 0.884;0.2774 0.2489 0.8908;0.2781 0.2543 0.8973;0.2788 0.2598 0.9035;0.2794 0.2653 0.9094;0.2798 0.2708 0.915;0.2802 0.2764 0.9204;0.2806 0.2819 0.9255;0.2809 0.2875 0.9305;0.2811 0.293 0.9352;0.2813 0.2985 0.9397;0.2814 0.304 0.9441;0.2814 0.3095 0.9483;0.2813 0.315 0.9524;0.2811 0.3204 0.9563;0.2809 0.3259 0.96;0.2807 0.3313 0.9636;0.2803 0.3367 0.967;0.2798 0.3421 0.9702;0.2791 0.3475 0.9733;0.2784 0.3529 0.9763;0.2776 0.3583 0.9791;0.2766 0.3638 0.9817;0.2754 0.3693 0.984;0.2741 0.3748 0.9862;0.2726 0.3804 0.9881;0.271 0.386 0.9898;0.2691 0.3916 0.9912;0.267 0.3973 0.9924;0.2647 0.403 0.9935;0.2621 0.4088 0.9946;0.2591 0.4145 0.9955;0.2556 0.4203 0.9965;0.2517 0.4261 0.9974;0.2473 0.4319 0.9983;0.2424 0.4378 0.9991;0.2369 0.4437 0.9996;0.2311 0.4497 0.9995;0.225 0.4559 0.9985;0.2189 0.462 0.9968;0.2128 0.4682 0.9948;0.2066 0.4743 0.9926;0.2006 0.4803 0.9906;0.195 0.4861 0.9887;0.1903 0.4919 0.9867;0.1869 0.4975 0.9844;0.1847 0.503 0.9819;0.1831 0.5084 0.9793;0.1818 0.5138 0.9766;0.1806 0.5191 0.9738;0.1795 0.5244 0.9709;0.1785 0.5296 0.9677;0.1778 0.5349 0.9641;0.1773 0.5401 0.9602;0.1768 0.5452 0.956;0.1764 0.5504 0.9516;0.1755 0.5554 0.9473;0.174 0.5605 0.9432;0.1716 0.5655 0.9393;0.1686 0.5705 0.9357;0.1649 0.5755 0.9323;0.161 0.5805 0.9289;0.1573 0.5854 0.9254;0.154 0.5902 0.9218;0.1513 0.595 0.9182;0.1492 0.5997 0.9147;0.1475 0.6043 0.9113;0.1461 0.6089 0.908;0.1446 0.6135 0.905;0.1429 0.618 0.9022;0.1408 0.6226 0.8998;0.1383 0.6272 0.8975;0.1354 0.6317 0.8953;0.1321 0.6363 0.8932;0.1288 0.6408 0.891;0.1253 0.6453 0.8887;0.1219 0.6497 0.8862;0.1185 0.6541 0.8834;0.1152 0.6584 0.8804;0.1119 0.6627 0.877;0.1085 0.6669 0.8734;0.1048 0.671 0.8695;0.1009 0.675 0.8653;0.0964 0.6789 0.8609;0.0914 0.6828 0.8562;0.0855 0.6865 0.8513;0.0789 0.6902 0.8462;0.0713 0.6938 0.8409;0.0628 0.6972 0.8355;0.0535 0.7006 0.8299;0.0433 0.7039 0.8242;0.0328 0.7071 0.8183;0.0234 0.7103 0.8124;0.0155 0.7133 0.8064;0.0091 0.7163 0.8003;0.0046 0.7192 0.7941;0.0019 0.722 0.7878;0.0009 0.7248 0.7815;0.0018 0.7275 0.7752;0.0046 0.7301 0.7688;0.0094 0.7327 0.7623;0.0162 0.7352 0.7558;0.0253 0.7376 0.7492;0.0369 0.74 0.7426;0.0504 0.7423 0.7359;0.0638 0.7446 0.7292;0.077 0.7468 0.7224;0.0899 0.7489 0.7156;0.1023 0.751 0.7088;0.1141 0.7531 0.7019;0.1252 0.7552 0.695;0.1354 0.7572 0.6881;0.1448 0.7593 0.6812;0.1532 0.7614 0.6741;0.1609 0.7635 0.6671;0.1678 0.7656 0.6599;0.1741 0.7678 0.6527;0.1799 0.7699 0.6454;0.1853 0.7721 0.6379;0.1905 0.7743 0.6303;0.1954 0.7765 0.6225;0.2003 0.7787 0.6146;0.2061 0.7808 0.6065;0.2118 0.7828 0.5983;0.2178 0.7849 0.5899;0.2244 0.7869 0.5813;0.2318 0.7887 0.5725;0.2401 0.7905 0.5636;0.2491 0.7922 0.5546;0.2589 0.7937 0.5454;0.2695 0.7951 0.536;0.2809 0.7964 0.5266;0.2929 0.7975 0.517;0.3052 0.7985 0.5074;0.3176 0.7994 0.4975;0.3301 0.8002 0.4876;0.3424 0.8009 0.4774;0.3548 0.8016 0.4669;0.3671 0.8021 0.4563;0.3795 0.8026 0.4454;0.3921 0.8029 0.4344;0.405 0.8031 0.4233;0.4184 0.803 0.4122;0.4322 0.8028 0.4013;0.4463 0.8024 0.3904;0.4608 0.8018 0.3797;0.4753 0.8011 0.3691;0.4899 0.8002 0.3586;0.5044 0.7993 0.348;0.5187 0.7982 0.3374;0.5329 0.797 0.3267;0.547 0.7957 0.3159;0.5609 0.7943 0.305;0.5748 0.7929 0.2941;0.5886 0.7913 0.2833;0.6024 0.7896 0.2726;0.6161 0.7878 0.2622;0.6297 0.7859 0.2521;0.6433 0.7839 0.2423;0.6567 0.7818 0.2329;0.6701 0.7796 0.2239;0.6833 0.7773 0.2155;0.6963 0.775 0.2075;0.7091 0.7727 0.1998;0.7218 0.7703 0.1924;0.7344 0.7679 0.1852;0.7468 0.7654 0.1782;0.759 0.7629 0.1717;0.771 0.7604 0.1658;0.7829 0.7579 0.1608;0.7945 0.7554 0.157;0.806 0.7529 0.1546;0.8172 0.7505 0.1535;0.8281 0.7481 0.1536;0.8389 0.7457 0.1546;0.8495 0.7435 0.1564;0.86 0.7413 0.1587;0.8703 0.7392 0.1615;0.8804 0.7372 0.165;0.8903 0.7353 0.1695;0.9 0.7336 0.1749;0.9093 0.7321 0.1815;0.9184 0.7308 0.189;0.9272 0.7298 0.1973;0.9357 0.729 0.2061;0.944 0.7285 0.2151;0.9523 0.7284 0.2237;0.9606 0.7285 0.2312;0.9689 0.7292 0.2373;0.977 0.7304 0.2418;0.9842 0.733 0.2446;0.99 0.7365 0.2429;0.9946 0.7407 0.2394;0.9966 0.7458 0.2351;0.9971 0.7513 0.2309;0.9972 0.7569 0.2267;0.9971 0.7626 0.2224;0.9969 0.7683 0.2181;0.9966 0.774 0.2138;0.9962 0.7798 0.2095;0.9957 0.7856 0.2053;0.9949 0.7915 0.2012;0.9938 0.7974 0.1974;0.9923 0.8034 0.1939;0.9906 0.8095 0.1906;0.9885 0.8156 0.1875;0.9861 0.8218 0.1846;0.9835 0.828 0.1817;0.9807 0.8342 0.1787;0.9778 0.8404 0.1757;0.9748 0.8467 0.1726;0.972 0.8529 0.1695;0.9694 0.8591 0.1665;0.9671 0.8654 0.1636;0.9651 0.8716 0.1608;0.9634 0.8778 0.1582;0.9619 0.884 0.1557;0.9608 0.8902 0.1532;0.9601 0.8963 0.1507;0.9596 0.9023 0.148;0.9595 0.9084 0.145;0.9597 0.9143 0.1418;0.9601 0.9203 0.1382;0.9608 0.9262 0.1344;0.9618 0.932 0.1304;0.9629 0.9379 0.1261;0.9642 0.9437 0.1216;0.9657 0.9494 0.1168;0.9674 0.9552 0.1116;0.9692 0.9609 0.1061;0.9711 0.9667 0.1001;0.973 0.9724 0.0938;0.9749 0.9782 0.0872;0.9769 0.9839 0.0805],...
'ColormapMode',get(0,'defaultaxesColormapMode'),...
'Alphamap',[0 0.0159 0.0317 0.0476 0.0635 0.0794 0.0952 0.1111 0.127 0.1429 0.1587 0.1746 0.1905 0.2063 0.2222 0.2381 0.254 0.2698 0.2857 0.3016 0.3175 0.3333 0.3492 0.3651 0.381 0.3968 0.4127 0.4286 0.4444 0.4603 0.4762 0.4921 0.5079 0.5238 0.5397 0.5556 0.5714 0.5873 0.6032 0.619 0.6349 0.6508 0.6667 0.6825 0.6984 0.7143 0.7302 0.746 0.7619 0.7778 0.7937 0.8095 0.8254 0.8413 0.8571 0.873 0.8889 0.9048 0.9206 0.9365 0.9524 0.9683 0.9841 1],...
'AlphamapMode',get(0,'defaultaxesAlphamapMode'),...
'XTick',[0 0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1],...
'XTickMode',get(0,'defaultaxesXTickMode'),...
'XTickLabel',{  '0'; '0.1'; '0.2'; '0.3'; '0.4'; '0.5'; '0.6'; '0.7'; '0.8'; '0.9'; '1' },...
'XTickLabelMode',get(0,'defaultaxesXTickLabelMode'),...
'YTick',[0 0.5 1],...
'YTickMode',get(0,'defaultaxesYTickMode'),...
'YTickLabel',{  '0'; '0.5'; '1' },...
'YTickLabelMode',get(0,'defaultaxesYTickLabelMode'),...
'Color',[0.870588235294118 0.572549019607843 0.494117647058824],...
'CameraMode',get(0,'defaultaxesCameraMode'),...
'DataSpaceMode',get(0,'defaultaxesDataSpaceMode'),...
'ColorSpaceMode',get(0,'defaultaxesColorSpaceMode'),...
'DecorationContainerMode',get(0,'defaultaxesDecorationContainerMode'),...
'ChildContainerMode',get(0,'defaultaxesChildContainerMode'),...
'XRulerMode',get(0,'defaultaxesXRulerMode'),...
'YRulerMode',get(0,'defaultaxesYRulerMode'),...
'ZRulerMode',get(0,'defaultaxesZRulerMode'),...
'AmbientLightSourceMode',get(0,'defaultaxesAmbientLightSourceMode'),...
'Position',[97.7142857142857 36.5555555555556 117.714285714286 5.16666666666666],...
'InnerPosition',[97.7142857142857 36.5555555555556 117.714285714286 5.16666666666666],...
'ActivePositionProperty','position',...
'ActivePositionPropertyMode',get(0,'defaultaxesActivePositionPropertyMode'),...
'PositionConstraint','innerposition',...
'PositionConstraintMode',get(0,'defaultaxesPositionConstraintMode'),...
'LooseInset',[38.7585714285714 6.78333333333333 28.3235714285714 4.625],...
'LooseInsetMode',get(0,'defaultaxesLooseInsetMode'),...
'ColorOrder',get(0,'defaultaxesColorOrder'),...
'FontSize',8,...
'FontSizeMode',get(0,'defaultaxesFontSizeMode'),...
'SortMethod','childorder',...
'SortMethodMode',get(0,'defaultaxesSortMethodMode'),...
'GridColor',get(0,'defaultaxesGridColor'),...
'Layout',[],...
'CreateFcn', {@local_CreateFcn, @(hObject,eventdata)music_12_export('audio_wave_CreateFcn',hObject,eventdata,guidata(hObject)), appdata} ,...
'Tag','audio_wave');

h3 = get(h2,'title');

set(h3,...
'Parent',h2,...
'Units','data',...
'FontUnits','points',...
'DecorationContainer',[],...
'DecorationContainerMode','auto',...
'Color',[0 0 0],...
'ColorMode','auto',...
'Position',[0.500001269636802 1.0236559139785 0.500000000000007],...
'PositionMode','auto',...
'Interpreter','tex',...
'InterpreterMode','auto',...
'Rotation',0,...
'RotationMode','auto',...
'FontName','Helvetica',...
'FontNameMode','auto',...
'FontSize',8.8,...
'FontSizeMode','auto',...
'FontAngle','normal',...
'FontAngleMode','auto',...
'FontWeight','normal',...
'FontWeightMode','auto',...
'HorizontalAlignment','center',...
'HorizontalAlignmentMode','auto',...
'VerticalAlignment','bottom',...
'VerticalAlignmentMode','auto',...
'EdgeColor','none',...
'EdgeColorMode','auto',...
'LineStyle','-',...
'LineStyleMode','auto',...
'LineWidth',0.5,...
'LineWidthMode','auto',...
'BackgroundColor','none',...
'BackgroundColorMode','auto',...
'Margin',3,...
'MarginMode','auto',...
'Clipping','off',...
'ClippingMode','auto',...
'Layer','middle',...
'LayerMode','auto',...
'FontSmoothing','on',...
'FontSmoothingMode','auto',...
'IncludeRenderer','on',...
'IsContainer','off',...
'IsContainerMode','auto',...
'DimensionNames',{  'X' 'Y' 'Z' },...
'DimensionNamesMode','auto',...
'XLimInclude','on',...
'XLimIncludeMode','auto',...
'YLimInclude','on',...
'YLimIncludeMode','auto',...
'ZLimInclude','on',...
'ZLimIncludeMode','auto',...
'CLimInclude','on',...
'CLimIncludeMode','auto',...
'ALimInclude','on',...
'ALimIncludeMode','auto',...
'Description','Axes Title',...
'DescriptionMode','auto',...
'Visible','on',...
'VisibleMode','auto',...
'Serializable','on',...
'SerializableMode','auto',...
'HandleVisibility','off',...
'HandleVisibilityMode','auto',...
'TransformForPrintFcnImplicitInvoke','on',...
'TransformForPrintFcnImplicitInvokeMode','auto',...
'HG1EraseMode','auto',...
'BusyAction','queue',...
'Interruptible','on',...
'HitTest','on',...
'HitTestMode','auto',...
'PickableParts','visible',...
'PickablePartsMode','auto');

h4 = get(h2,'xlabel');

set(h4,...
'Parent',h2,...
'Units','data',...
'FontUnits','points',...
'DecorationContainer',[],...
'DecorationContainerMode','auto',...
'Color',[0.15 0.15 0.15],...
'ColorMode','auto',...
'Position',[0.500000476837158 -0.211469538408368 7.105427357601e-15],...
'PositionMode','auto',...
'Interpreter','tex',...
'InterpreterMode','auto',...
'Rotation',0,...
'RotationMode','auto',...
'FontName','Helvetica',...
'FontNameMode','auto',...
'FontSize',8.8,...
'FontSizeMode','auto',...
'FontAngle','normal',...
'FontAngleMode','auto',...
'FontWeight','normal',...
'FontWeightMode','auto',...
'HorizontalAlignment','center',...
'HorizontalAlignmentMode','auto',...
'VerticalAlignment','top',...
'VerticalAlignmentMode','auto',...
'EdgeColor','none',...
'EdgeColorMode','auto',...
'LineStyle','-',...
'LineStyleMode','auto',...
'LineWidth',0.5,...
'LineWidthMode','auto',...
'BackgroundColor','none',...
'BackgroundColorMode','auto',...
'Margin',3,...
'MarginMode','auto',...
'Clipping','off',...
'ClippingMode','auto',...
'Layer','back',...
'LayerMode','auto',...
'FontSmoothing','on',...
'FontSmoothingMode','auto',...
'IncludeRenderer','on',...
'IsContainer','off',...
'IsContainerMode','auto',...
'DimensionNames',{  'X' 'Y' 'Z' },...
'DimensionNamesMode','auto',...
'XLimInclude','on',...
'XLimIncludeMode','auto',...
'YLimInclude','on',...
'YLimIncludeMode','auto',...
'ZLimInclude','on',...
'ZLimIncludeMode','auto',...
'CLimInclude','on',...
'CLimIncludeMode','auto',...
'ALimInclude','on',...
'ALimIncludeMode','auto',...
'Description','AxisRulerBase Label',...
'DescriptionMode','auto',...
'Visible','on',...
'VisibleMode','auto',...
'Serializable','on',...
'SerializableMode','auto',...
'HandleVisibility','off',...
'HandleVisibilityMode','auto',...
'TransformForPrintFcnImplicitInvoke','on',...
'TransformForPrintFcnImplicitInvokeMode','auto',...
'HG1EraseMode','auto',...
'BusyAction','queue',...
'Interruptible','on',...
'HitTest','on',...
'HitTestMode','auto',...
'PickableParts','visible',...
'PickablePartsMode','auto');

h5 = get(h2,'ylabel');

set(h5,...
'Parent',h2,...
'Units','data',...
'FontUnits','points',...
'DecorationContainer',[],...
'DecorationContainerMode','auto',...
'Color',[0.15 0.15 0.15],...
'ColorMode','auto',...
'Position',[-0.0283171526533115 0.500000476837158 7.105427357601e-15],...
'PositionMode','auto',...
'Interpreter','tex',...
'InterpreterMode','auto',...
'Rotation',90,...
'RotationMode','auto',...
'FontName','Helvetica',...
'FontNameMode','auto',...
'FontSize',8.8,...
'FontSizeMode','auto',...
'FontAngle','normal',...
'FontAngleMode','auto',...
'FontWeight','normal',...
'FontWeightMode','auto',...
'HorizontalAlignment','center',...
'HorizontalAlignmentMode','auto',...
'VerticalAlignment','bottom',...
'VerticalAlignmentMode','auto',...
'EdgeColor','none',...
'EdgeColorMode','auto',...
'LineStyle','-',...
'LineStyleMode','auto',...
'LineWidth',0.5,...
'LineWidthMode','auto',...
'BackgroundColor','none',...
'BackgroundColorMode','auto',...
'Margin',3,...
'MarginMode','auto',...
'Clipping','off',...
'ClippingMode','auto',...
'Layer','back',...
'LayerMode','auto',...
'FontSmoothing','on',...
'FontSmoothingMode','auto',...
'IncludeRenderer','on',...
'IsContainer','off',...
'IsContainerMode','auto',...
'DimensionNames',{  'X' 'Y' 'Z' },...
'DimensionNamesMode','auto',...
'XLimInclude','on',...
'XLimIncludeMode','auto',...
'YLimInclude','on',...
'YLimIncludeMode','auto',...
'ZLimInclude','on',...
'ZLimIncludeMode','auto',...
'CLimInclude','on',...
'CLimIncludeMode','auto',...
'ALimInclude','on',...
'ALimIncludeMode','auto',...
'Description','AxisRulerBase Label',...
'DescriptionMode','auto',...
'Visible','on',...
'VisibleMode','auto',...
'Serializable','on',...
'SerializableMode','auto',...
'HandleVisibility','off',...
'HandleVisibilityMode','auto',...
'TransformForPrintFcnImplicitInvoke','on',...
'TransformForPrintFcnImplicitInvokeMode','auto',...
'HG1EraseMode','auto',...
'BusyAction','queue',...
'Interruptible','on',...
'HitTest','on',...
'HitTestMode','auto',...
'PickableParts','visible',...
'PickablePartsMode','auto');

h6 = get(h2,'zlabel');

set(h6,...
'Parent',h2,...
'Units','data',...
'FontUnits','points',...
'DecorationContainer',[],...
'DecorationContainerMode','auto',...
'Color',[0.15 0.15 0.15],...
'ColorMode','auto',...
'Position',[0 0 0],...
'PositionMode','auto',...
'Interpreter','tex',...
'InterpreterMode','auto',...
'Rotation',0,...
'RotationMode','auto',...
'FontName','Helvetica',...
'FontNameMode','auto',...
'FontSize',10,...
'FontSizeMode','auto',...
'FontAngle','normal',...
'FontAngleMode','auto',...
'FontWeight','normal',...
'FontWeightMode','auto',...
'HorizontalAlignment','center',...
'HorizontalAlignmentMode','auto',...
'VerticalAlignment','middle',...
'VerticalAlignmentMode','auto',...
'EdgeColor','none',...
'EdgeColorMode','auto',...
'LineStyle','-',...
'LineStyleMode','auto',...
'LineWidth',0.5,...
'LineWidthMode','auto',...
'BackgroundColor','none',...
'BackgroundColorMode','auto',...
'Margin',3,...
'MarginMode','auto',...
'Clipping','off',...
'ClippingMode','auto',...
'Layer','middle',...
'LayerMode','auto',...
'FontSmoothing','on',...
'FontSmoothingMode','auto',...
'IncludeRenderer','on',...
'IsContainer','off',...
'IsContainerMode','auto',...
'DimensionNames',{  'X' 'Y' 'Z' },...
'DimensionNamesMode','auto',...
'XLimInclude','on',...
'XLimIncludeMode','auto',...
'YLimInclude','on',...
'YLimIncludeMode','auto',...
'ZLimInclude','on',...
'ZLimIncludeMode','auto',...
'CLimInclude','on',...
'CLimIncludeMode','auto',...
'ALimInclude','on',...
'ALimIncludeMode','auto',...
'Description','AxisRulerBase Label',...
'DescriptionMode','auto',...
'Visible','off',...
'VisibleMode','auto',...
'Serializable','on',...
'SerializableMode','auto',...
'HandleVisibility','off',...
'HandleVisibilityMode','auto',...
'TransformForPrintFcnImplicitInvoke','on',...
'TransformForPrintFcnImplicitInvokeMode','auto',...
'HG1EraseMode','auto',...
'BusyAction','queue',...
'Interruptible','on',...
'HitTest','on',...
'HitTestMode','auto',...
'PickableParts','visible',...
'PickablePartsMode','auto');

appdata = [];
appdata.lastValidTag = 'sound_wave';

h7 = axes(...
'Parent',h1,...
'FontUnits',get(0,'defaultaxesFontUnits'),...
'Units','characters',...
'CameraPosition',[0.5 0.5 9.16025403784439],...
'CameraPositionMode',get(0,'defaultaxesCameraPositionMode'),...
'CameraTarget',[0.5 0.5 0.5],...
'CameraTargetMode',get(0,'defaultaxesCameraTargetMode'),...
'CameraViewAngle',6.60861036031192,...
'CameraViewAngleMode',get(0,'defaultaxesCameraViewAngleMode'),...
'AmbientLightColor',[0.929411764705882 0.72156862745098 0.949019607843137],...
'PlotBoxAspectRatio',[1 0.112864077669903 0.112864077669903],...
'PlotBoxAspectRatioMode',get(0,'defaultaxesPlotBoxAspectRatioMode'),...
'FontName','Helvetica',...
'FontNameMode',get(0,'defaultaxesFontNameMode'),...
'Colormap',[0.2422 0.1504 0.6603;0.2444 0.1534 0.6728;0.2464 0.1569 0.6847;0.2484 0.1607 0.6961;0.2503 0.1648 0.7071;0.2522 0.1689 0.7179;0.254 0.1732 0.7286;0.2558 0.1773 0.7393;0.2576 0.1814 0.7501;0.2594 0.1854 0.761;0.2611 0.1893 0.7719;0.2628 0.1932 0.7828;0.2645 0.1972 0.7937;0.2661 0.2011 0.8043;0.2676 0.2052 0.8148;0.2691 0.2094 0.8249;0.2704 0.2138 0.8346;0.2717 0.2184 0.8439;0.2729 0.2231 0.8528;0.274 0.228 0.8612;0.2749 0.233 0.8692;0.2758 0.2382 0.8767;0.2766 0.2435 0.884;0.2774 0.2489 0.8908;0.2781 0.2543 0.8973;0.2788 0.2598 0.9035;0.2794 0.2653 0.9094;0.2798 0.2708 0.915;0.2802 0.2764 0.9204;0.2806 0.2819 0.9255;0.2809 0.2875 0.9305;0.2811 0.293 0.9352;0.2813 0.2985 0.9397;0.2814 0.304 0.9441;0.2814 0.3095 0.9483;0.2813 0.315 0.9524;0.2811 0.3204 0.9563;0.2809 0.3259 0.96;0.2807 0.3313 0.9636;0.2803 0.3367 0.967;0.2798 0.3421 0.9702;0.2791 0.3475 0.9733;0.2784 0.3529 0.9763;0.2776 0.3583 0.9791;0.2766 0.3638 0.9817;0.2754 0.3693 0.984;0.2741 0.3748 0.9862;0.2726 0.3804 0.9881;0.271 0.386 0.9898;0.2691 0.3916 0.9912;0.267 0.3973 0.9924;0.2647 0.403 0.9935;0.2621 0.4088 0.9946;0.2591 0.4145 0.9955;0.2556 0.4203 0.9965;0.2517 0.4261 0.9974;0.2473 0.4319 0.9983;0.2424 0.4378 0.9991;0.2369 0.4437 0.9996;0.2311 0.4497 0.9995;0.225 0.4559 0.9985;0.2189 0.462 0.9968;0.2128 0.4682 0.9948;0.2066 0.4743 0.9926;0.2006 0.4803 0.9906;0.195 0.4861 0.9887;0.1903 0.4919 0.9867;0.1869 0.4975 0.9844;0.1847 0.503 0.9819;0.1831 0.5084 0.9793;0.1818 0.5138 0.9766;0.1806 0.5191 0.9738;0.1795 0.5244 0.9709;0.1785 0.5296 0.9677;0.1778 0.5349 0.9641;0.1773 0.5401 0.9602;0.1768 0.5452 0.956;0.1764 0.5504 0.9516;0.1755 0.5554 0.9473;0.174 0.5605 0.9432;0.1716 0.5655 0.9393;0.1686 0.5705 0.9357;0.1649 0.5755 0.9323;0.161 0.5805 0.9289;0.1573 0.5854 0.9254;0.154 0.5902 0.9218;0.1513 0.595 0.9182;0.1492 0.5997 0.9147;0.1475 0.6043 0.9113;0.1461 0.6089 0.908;0.1446 0.6135 0.905;0.1429 0.618 0.9022;0.1408 0.6226 0.8998;0.1383 0.6272 0.8975;0.1354 0.6317 0.8953;0.1321 0.6363 0.8932;0.1288 0.6408 0.891;0.1253 0.6453 0.8887;0.1219 0.6497 0.8862;0.1185 0.6541 0.8834;0.1152 0.6584 0.8804;0.1119 0.6627 0.877;0.1085 0.6669 0.8734;0.1048 0.671 0.8695;0.1009 0.675 0.8653;0.0964 0.6789 0.8609;0.0914 0.6828 0.8562;0.0855 0.6865 0.8513;0.0789 0.6902 0.8462;0.0713 0.6938 0.8409;0.0628 0.6972 0.8355;0.0535 0.7006 0.8299;0.0433 0.7039 0.8242;0.0328 0.7071 0.8183;0.0234 0.7103 0.8124;0.0155 0.7133 0.8064;0.0091 0.7163 0.8003;0.0046 0.7192 0.7941;0.0019 0.722 0.7878;0.0009 0.7248 0.7815;0.0018 0.7275 0.7752;0.0046 0.7301 0.7688;0.0094 0.7327 0.7623;0.0162 0.7352 0.7558;0.0253 0.7376 0.7492;0.0369 0.74 0.7426;0.0504 0.7423 0.7359;0.0638 0.7446 0.7292;0.077 0.7468 0.7224;0.0899 0.7489 0.7156;0.1023 0.751 0.7088;0.1141 0.7531 0.7019;0.1252 0.7552 0.695;0.1354 0.7572 0.6881;0.1448 0.7593 0.6812;0.1532 0.7614 0.6741;0.1609 0.7635 0.6671;0.1678 0.7656 0.6599;0.1741 0.7678 0.6527;0.1799 0.7699 0.6454;0.1853 0.7721 0.6379;0.1905 0.7743 0.6303;0.1954 0.7765 0.6225;0.2003 0.7787 0.6146;0.2061 0.7808 0.6065;0.2118 0.7828 0.5983;0.2178 0.7849 0.5899;0.2244 0.7869 0.5813;0.2318 0.7887 0.5725;0.2401 0.7905 0.5636;0.2491 0.7922 0.5546;0.2589 0.7937 0.5454;0.2695 0.7951 0.536;0.2809 0.7964 0.5266;0.2929 0.7975 0.517;0.3052 0.7985 0.5074;0.3176 0.7994 0.4975;0.3301 0.8002 0.4876;0.3424 0.8009 0.4774;0.3548 0.8016 0.4669;0.3671 0.8021 0.4563;0.3795 0.8026 0.4454;0.3921 0.8029 0.4344;0.405 0.8031 0.4233;0.4184 0.803 0.4122;0.4322 0.8028 0.4013;0.4463 0.8024 0.3904;0.4608 0.8018 0.3797;0.4753 0.8011 0.3691;0.4899 0.8002 0.3586;0.5044 0.7993 0.348;0.5187 0.7982 0.3374;0.5329 0.797 0.3267;0.547 0.7957 0.3159;0.5609 0.7943 0.305;0.5748 0.7929 0.2941;0.5886 0.7913 0.2833;0.6024 0.7896 0.2726;0.6161 0.7878 0.2622;0.6297 0.7859 0.2521;0.6433 0.7839 0.2423;0.6567 0.7818 0.2329;0.6701 0.7796 0.2239;0.6833 0.7773 0.2155;0.6963 0.775 0.2075;0.7091 0.7727 0.1998;0.7218 0.7703 0.1924;0.7344 0.7679 0.1852;0.7468 0.7654 0.1782;0.759 0.7629 0.1717;0.771 0.7604 0.1658;0.7829 0.7579 0.1608;0.7945 0.7554 0.157;0.806 0.7529 0.1546;0.8172 0.7505 0.1535;0.8281 0.7481 0.1536;0.8389 0.7457 0.1546;0.8495 0.7435 0.1564;0.86 0.7413 0.1587;0.8703 0.7392 0.1615;0.8804 0.7372 0.165;0.8903 0.7353 0.1695;0.9 0.7336 0.1749;0.9093 0.7321 0.1815;0.9184 0.7308 0.189;0.9272 0.7298 0.1973;0.9357 0.729 0.2061;0.944 0.7285 0.2151;0.9523 0.7284 0.2237;0.9606 0.7285 0.2312;0.9689 0.7292 0.2373;0.977 0.7304 0.2418;0.9842 0.733 0.2446;0.99 0.7365 0.2429;0.9946 0.7407 0.2394;0.9966 0.7458 0.2351;0.9971 0.7513 0.2309;0.9972 0.7569 0.2267;0.9971 0.7626 0.2224;0.9969 0.7683 0.2181;0.9966 0.774 0.2138;0.9962 0.7798 0.2095;0.9957 0.7856 0.2053;0.9949 0.7915 0.2012;0.9938 0.7974 0.1974;0.9923 0.8034 0.1939;0.9906 0.8095 0.1906;0.9885 0.8156 0.1875;0.9861 0.8218 0.1846;0.9835 0.828 0.1817;0.9807 0.8342 0.1787;0.9778 0.8404 0.1757;0.9748 0.8467 0.1726;0.972 0.8529 0.1695;0.9694 0.8591 0.1665;0.9671 0.8654 0.1636;0.9651 0.8716 0.1608;0.9634 0.8778 0.1582;0.9619 0.884 0.1557;0.9608 0.8902 0.1532;0.9601 0.8963 0.1507;0.9596 0.9023 0.148;0.9595 0.9084 0.145;0.9597 0.9143 0.1418;0.9601 0.9203 0.1382;0.9608 0.9262 0.1344;0.9618 0.932 0.1304;0.9629 0.9379 0.1261;0.9642 0.9437 0.1216;0.9657 0.9494 0.1168;0.9674 0.9552 0.1116;0.9692 0.9609 0.1061;0.9711 0.9667 0.1001;0.973 0.9724 0.0938;0.9749 0.9782 0.0872;0.9769 0.9839 0.0805],...
'ColormapMode',get(0,'defaultaxesColormapMode'),...
'Alphamap',[0 0.0159 0.0317 0.0476 0.0635 0.0794 0.0952 0.1111 0.127 0.1429 0.1587 0.1746 0.1905 0.2063 0.2222 0.2381 0.254 0.2698 0.2857 0.3016 0.3175 0.3333 0.3492 0.3651 0.381 0.3968 0.4127 0.4286 0.4444 0.4603 0.4762 0.4921 0.5079 0.5238 0.5397 0.5556 0.5714 0.5873 0.6032 0.619 0.6349 0.6508 0.6667 0.6825 0.6984 0.7143 0.7302 0.746 0.7619 0.7778 0.7937 0.8095 0.8254 0.8413 0.8571 0.873 0.8889 0.9048 0.9206 0.9365 0.9524 0.9683 0.9841 1],...
'AlphamapMode',get(0,'defaultaxesAlphamapMode'),...
'XTick',[0 0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1],...
'XTickMode',get(0,'defaultaxesXTickMode'),...
'XTickLabel',{  '0'; '0.1'; '0.2'; '0.3'; '0.4'; '0.5'; '0.6'; '0.7'; '0.8'; '0.9'; '1' },...
'XTickLabelMode',get(0,'defaultaxesXTickLabelMode'),...
'YTick',[0 0.5 1],...
'YTickMode',get(0,'defaultaxesYTickMode'),...
'YTickLabel',{  '0'; '0.5'; '1' },...
'YTickLabelMode',get(0,'defaultaxesYTickLabelMode'),...
'Color',[0.929411764705882 0.72156862745098 0.949019607843137],...
'CameraMode',get(0,'defaultaxesCameraMode'),...
'DataSpaceMode',get(0,'defaultaxesDataSpaceMode'),...
'ColorSpaceMode',get(0,'defaultaxesColorSpaceMode'),...
'DecorationContainerMode',get(0,'defaultaxesDecorationContainerMode'),...
'ChildContainerMode',get(0,'defaultaxesChildContainerMode'),...
'XRulerMode',get(0,'defaultaxesXRulerMode'),...
'YRulerMode',get(0,'defaultaxesYRulerMode'),...
'ZRulerMode',get(0,'defaultaxesZRulerMode'),...
'AmbientLightSourceMode',get(0,'defaultaxesAmbientLightSourceMode'),...
'Position',[137.285714285714 3.83333333333333 117.714285714286 5.16666666666667],...
'InnerPosition',[137.285714285714 3.83333333333333 117.714285714286 5.16666666666667],...
'ActivePositionProperty','position',...
'ActivePositionPropertyMode',get(0,'defaultaxesActivePositionPropertyMode'),...
'PositionConstraint','innerposition',...
'PositionConstraintMode',get(0,'defaultaxesPositionConstraintMode'),...
'LooseInset',[38.7585714285714 6.78333333333333 28.3235714285714 4.625],...
'LooseInsetMode',get(0,'defaultaxesLooseInsetMode'),...
'ColorOrder',get(0,'defaultaxesColorOrder'),...
'FontSize',8,...
'FontSizeMode',get(0,'defaultaxesFontSizeMode'),...
'SortMethod','childorder',...
'SortMethodMode',get(0,'defaultaxesSortMethodMode'),...
'GridColor',get(0,'defaultaxesGridColor'),...
'Layout',[],...
'ButtonDownFcn',blanks(0),...
'CreateFcn', {@local_CreateFcn, blanks(0), appdata} ,...
'DeleteFcn',blanks(0),...
'Tag','sound_wave');

h8 = get(h7,'title');

set(h8,...
'Parent',h7,...
'Units','data',...
'FontUnits','points',...
'DecorationContainer',[],...
'DecorationContainerMode','auto',...
'Color',[0 0 0],...
'ColorMode','auto',...
'Position',[0.500001590228775 1.02365591397849 0.500000000000007],...
'PositionMode','auto',...
'Interpreter','tex',...
'InterpreterMode','auto',...
'Rotation',0,...
'RotationMode','auto',...
'FontName','Helvetica',...
'FontNameMode','auto',...
'FontSize',8.8,...
'FontSizeMode','auto',...
'FontAngle','normal',...
'FontAngleMode','auto',...
'FontWeight','normal',...
'FontWeightMode','auto',...
'HorizontalAlignment','center',...
'HorizontalAlignmentMode','auto',...
'VerticalAlignment','bottom',...
'VerticalAlignmentMode','auto',...
'EdgeColor','none',...
'EdgeColorMode','auto',...
'LineStyle','-',...
'LineStyleMode','auto',...
'LineWidth',0.5,...
'LineWidthMode','auto',...
'BackgroundColor','none',...
'BackgroundColorMode','auto',...
'Margin',3,...
'MarginMode','auto',...
'Clipping','off',...
'ClippingMode','auto',...
'Layer','middle',...
'LayerMode','auto',...
'FontSmoothing','on',...
'FontSmoothingMode','auto',...
'IncludeRenderer','on',...
'IsContainer','off',...
'IsContainerMode','auto',...
'DimensionNames',{  'X' 'Y' 'Z' },...
'DimensionNamesMode','auto',...
'XLimInclude','on',...
'XLimIncludeMode','auto',...
'YLimInclude','on',...
'YLimIncludeMode','auto',...
'ZLimInclude','on',...
'ZLimIncludeMode','auto',...
'CLimInclude','on',...
'CLimIncludeMode','auto',...
'ALimInclude','on',...
'ALimIncludeMode','auto',...
'Description','Axes Title',...
'DescriptionMode','auto',...
'Visible','on',...
'VisibleMode','auto',...
'Serializable','on',...
'SerializableMode','auto',...
'HandleVisibility','off',...
'HandleVisibilityMode','auto',...
'TransformForPrintFcnImplicitInvoke','on',...
'TransformForPrintFcnImplicitInvokeMode','auto',...
'HG1EraseMode','auto',...
'BusyAction','queue',...
'Interruptible','on',...
'HitTest','on',...
'HitTestMode','auto',...
'PickableParts','visible',...
'PickablePartsMode','auto');

h9 = get(h7,'xlabel');

set(h9,...
'Parent',h7,...
'Units','data',...
'FontUnits','points',...
'DecorationContainer',[],...
'DecorationContainerMode','auto',...
'Color',[0.15 0.15 0.15],...
'ColorMode','auto',...
'Position',[0.500000476837158 -0.211469538408368 7.105427357601e-15],...
'PositionMode','auto',...
'Interpreter','tex',...
'InterpreterMode','auto',...
'Rotation',0,...
'RotationMode','auto',...
'FontName','Helvetica',...
'FontNameMode','auto',...
'FontSize',8.8,...
'FontSizeMode','auto',...
'FontAngle','normal',...
'FontAngleMode','auto',...
'FontWeight','normal',...
'FontWeightMode','auto',...
'HorizontalAlignment','center',...
'HorizontalAlignmentMode','auto',...
'VerticalAlignment','top',...
'VerticalAlignmentMode','auto',...
'EdgeColor','none',...
'EdgeColorMode','auto',...
'LineStyle','-',...
'LineStyleMode','auto',...
'LineWidth',0.5,...
'LineWidthMode','auto',...
'BackgroundColor','none',...
'BackgroundColorMode','auto',...
'Margin',3,...
'MarginMode','auto',...
'Clipping','off',...
'ClippingMode','auto',...
'Layer','back',...
'LayerMode','auto',...
'FontSmoothing','on',...
'FontSmoothingMode','auto',...
'IncludeRenderer','on',...
'IsContainer','off',...
'IsContainerMode','auto',...
'DimensionNames',{  'X' 'Y' 'Z' },...
'DimensionNamesMode','auto',...
'XLimInclude','on',...
'XLimIncludeMode','auto',...
'YLimInclude','on',...
'YLimIncludeMode','auto',...
'ZLimInclude','on',...
'ZLimIncludeMode','auto',...
'CLimInclude','on',...
'CLimIncludeMode','auto',...
'ALimInclude','on',...
'ALimIncludeMode','auto',...
'Description','AxisRulerBase Label',...
'DescriptionMode','auto',...
'Visible','on',...
'VisibleMode','auto',...
'Serializable','on',...
'SerializableMode','auto',...
'HandleVisibility','off',...
'HandleVisibilityMode','auto',...
'TransformForPrintFcnImplicitInvoke','on',...
'TransformForPrintFcnImplicitInvokeMode','auto',...
'HG1EraseMode','auto',...
'BusyAction','queue',...
'Interruptible','on',...
'HitTest','on',...
'HitTestMode','auto',...
'PickableParts','visible',...
'PickablePartsMode','auto');

h10 = get(h7,'ylabel');

set(h10,...
'Parent',h7,...
'Units','data',...
'FontUnits','points',...
'DecorationContainer',[],...
'DecorationContainerMode','auto',...
'Color',[0.15 0.15 0.15],...
'ColorMode','auto',...
'Position',[-0.0283171526533115 0.500000476837158 7.105427357601e-15],...
'PositionMode','auto',...
'Interpreter','tex',...
'InterpreterMode','auto',...
'Rotation',90,...
'RotationMode','auto',...
'FontName','Helvetica',...
'FontNameMode','auto',...
'FontSize',8.8,...
'FontSizeMode','auto',...
'FontAngle','normal',...
'FontAngleMode','auto',...
'FontWeight','normal',...
'FontWeightMode','auto',...
'HorizontalAlignment','center',...
'HorizontalAlignmentMode','auto',...
'VerticalAlignment','bottom',...
'VerticalAlignmentMode','auto',...
'EdgeColor','none',...
'EdgeColorMode','auto',...
'LineStyle','-',...
'LineStyleMode','auto',...
'LineWidth',0.5,...
'LineWidthMode','auto',...
'BackgroundColor','none',...
'BackgroundColorMode','auto',...
'Margin',3,...
'MarginMode','auto',...
'Clipping','off',...
'ClippingMode','auto',...
'Layer','back',...
'LayerMode','auto',...
'FontSmoothing','on',...
'FontSmoothingMode','auto',...
'IncludeRenderer','on',...
'IsContainer','off',...
'IsContainerMode','auto',...
'DimensionNames',{  'X' 'Y' 'Z' },...
'DimensionNamesMode','auto',...
'XLimInclude','on',...
'XLimIncludeMode','auto',...
'YLimInclude','on',...
'YLimIncludeMode','auto',...
'ZLimInclude','on',...
'ZLimIncludeMode','auto',...
'CLimInclude','on',...
'CLimIncludeMode','auto',...
'ALimInclude','on',...
'ALimIncludeMode','auto',...
'Description','AxisRulerBase Label',...
'DescriptionMode','auto',...
'Visible','on',...
'VisibleMode','auto',...
'Serializable','on',...
'SerializableMode','auto',...
'HandleVisibility','off',...
'HandleVisibilityMode','auto',...
'TransformForPrintFcnImplicitInvoke','on',...
'TransformForPrintFcnImplicitInvokeMode','auto',...
'HG1EraseMode','auto',...
'BusyAction','queue',...
'Interruptible','on',...
'HitTest','on',...
'HitTestMode','auto',...
'PickableParts','visible',...
'PickablePartsMode','auto');

h11 = get(h7,'zlabel');

set(h11,...
'Parent',h7,...
'Units','data',...
'FontUnits','points',...
'DecorationContainer',[],...
'DecorationContainerMode','auto',...
'Color',[0.15 0.15 0.15],...
'ColorMode','auto',...
'Position',[0 0 0],...
'PositionMode','auto',...
'Interpreter','tex',...
'InterpreterMode','auto',...
'Rotation',0,...
'RotationMode','auto',...
'FontName','Helvetica',...
'FontNameMode','auto',...
'FontSize',10,...
'FontSizeMode','auto',...
'FontAngle','normal',...
'FontAngleMode','auto',...
'FontWeight','normal',...
'FontWeightMode','auto',...
'HorizontalAlignment','center',...
'HorizontalAlignmentMode','auto',...
'VerticalAlignment','middle',...
'VerticalAlignmentMode','auto',...
'EdgeColor','none',...
'EdgeColorMode','auto',...
'LineStyle','-',...
'LineStyleMode','auto',...
'LineWidth',0.5,...
'LineWidthMode','auto',...
'BackgroundColor','none',...
'BackgroundColorMode','auto',...
'Margin',3,...
'MarginMode','auto',...
'Clipping','off',...
'ClippingMode','auto',...
'Layer','middle',...
'LayerMode','auto',...
'FontSmoothing','on',...
'FontSmoothingMode','auto',...
'IncludeRenderer','on',...
'IsContainer','off',...
'IsContainerMode','auto',...
'DimensionNames',{  'X' 'Y' 'Z' },...
'DimensionNamesMode','auto',...
'XLimInclude','on',...
'XLimIncludeMode','auto',...
'YLimInclude','on',...
'YLimIncludeMode','auto',...
'ZLimInclude','on',...
'ZLimIncludeMode','auto',...
'CLimInclude','on',...
'CLimIncludeMode','auto',...
'ALimInclude','on',...
'ALimIncludeMode','auto',...
'Description','AxisRulerBase Label',...
'DescriptionMode','auto',...
'Visible','off',...
'VisibleMode','auto',...
'Serializable','on',...
'SerializableMode','auto',...
'HandleVisibility','off',...
'HandleVisibilityMode','auto',...
'TransformForPrintFcnImplicitInvoke','on',...
'TransformForPrintFcnImplicitInvokeMode','auto',...
'HG1EraseMode','auto',...
'BusyAction','queue',...
'Interruptible','on',...
'HitTest','on',...
'HitTestMode','auto',...
'PickableParts','visible',...
'PickablePartsMode','auto');

appdata = [];
appdata.lastValidTag = 'add_audio';

h12 = uicontrol(...
'Parent',h1,...
'Units','characters',...
'FontUnits',get(0,'defaultuicontrolFontUnits'),...
'HorizontalAlignment',get(0,'defaultuicontrolHorizontalAlignment'),...
'ListboxTop',get(0,'defaultuicontrolListboxTop'),...
'Max',get(0,'defaultuicontrolMax'),...
'Min',get(0,'defaultuicontrolMin'),...
'SliderStep',get(0,'defaultuicontrolSliderStep'),...
'String','1.添加音频',...
'Style',get(0,'defaultuicontrolStyle'),...
'Value',get(0,'defaultuicontrolValue'),...
'Position',[49.4285714285714 43.8333333333333 37.4285714285714 5.77777777777778],...
'BackgroundColor',[0.301960784313725 0.745098039215686 0.933333333333333],...
'Callback',@(hObject,eventdata)music_12_export('add_audio_Callback',hObject,eventdata,guidata(hObject)),...
'Children',[],...
'Tooltip',blanks(0),...
'ForegroundColor',get(0,'defaultuicontrolForegroundColor'),...
'Enable',get(0,'defaultuicontrolEnable'),...
'Visible',get(0,'defaultuicontrolVisible'),...
'HandleVisibility',get(0,'defaultuicontrolHandleVisibility'),...
'ButtonDownFcn',blanks(0),...
'CreateFcn', {@local_CreateFcn, blanks(0), appdata} ,...
'DeleteFcn',blanks(0),...
'Tag','add_audio',...
'UserData',[],...
'KeyPressFcn',blanks(0),...
'KeyReleaseFcn',blanks(0),...
'FontSize',15,...
'FontName',get(0,'defaultuicontrolFontName'),...
'FontAngle',get(0,'defaultuicontrolFontAngle'),...
'FontWeight','bold');

appdata = [];
appdata.lastValidTag = 'start_sampling';

h13 = uicontrol(...
'Parent',h1,...
'Units','characters',...
'FontUnits',get(0,'defaultuicontrolFontUnits'),...
'HorizontalAlignment',get(0,'defaultuicontrolHorizontalAlignment'),...
'ListboxTop',get(0,'defaultuicontrolListboxTop'),...
'Max',get(0,'defaultuicontrolMax'),...
'Min',get(0,'defaultuicontrolMin'),...
'SliderStep',get(0,'defaultuicontrolSliderStep'),...
'String','3.开始采样',...
'Style',get(0,'defaultuicontrolStyle'),...
'Value',get(0,'defaultuicontrolValue'),...
'Position',[49.4285714285714 28.4444444444444 37.4285714285714 5.72222222222222],...
'BackgroundColor',[0.929411764705882 0.72156862745098 0.949019607843137],...
'Callback',@(hObject,eventdata)music_12_export('start_sampling_Callback',hObject,eventdata,guidata(hObject)),...
'Children',[],...
'Tooltip',blanks(0),...
'ForegroundColor',get(0,'defaultuicontrolForegroundColor'),...
'Enable',get(0,'defaultuicontrolEnable'),...
'Visible',get(0,'defaultuicontrolVisible'),...
'HandleVisibility',get(0,'defaultuicontrolHandleVisibility'),...
'ButtonDownFcn',blanks(0),...
'CreateFcn', {@local_CreateFcn, blanks(0), appdata} ,...
'DeleteFcn',blanks(0),...
'Tag','start_sampling',...
'UserData',[],...
'KeyPressFcn',blanks(0),...
'KeyReleaseFcn',blanks(0),...
'FontSize',15,...
'FontName',get(0,'defaultuicontrolFontName'),...
'FontAngle',get(0,'defaultuicontrolFontAngle'),...
'FontWeight','bold');

appdata = [];
appdata.lastValidTag = 'harmonic_component';

h14 = uicontrol(...
'Parent',h1,...
'Units','characters',...
'FontUnits',get(0,'defaultuicontrolFontUnits'),...
'String','输出-谐波分量',...
'Style','listbox',...
'Value',1,...
'ValueMode',get(0,'defaultuicontrolValueMode'),...
'Position',[98.4285714285714 28.4444444444444 121 6],...
'BackgroundColor',[0.929411764705882 0.72156862745098 0.949019607843137],...
'Callback',@(hObject,eventdata)music_12_export('harmonic_component_Callback',hObject,eventdata,guidata(hObject)),...
'Children',[],...
'CreateFcn', {@local_CreateFcn, @(hObject,eventdata)music_12_export('harmonic_component_CreateFcn',hObject,eventdata,guidata(hObject)), appdata} ,...
'Tag','harmonic_component');

appdata = [];
appdata.lastValidTag = 'play_audio';

h15 = uicontrol(...
'Parent',h1,...
'Units','characters',...
'FontUnits',get(0,'defaultuicontrolFontUnits'),...
'String','2.播放音频',...
'Style',get(0,'defaultuicontrolStyle'),...
'Position',[49.5714285714286 36.5 37.2857142857143 5.72222222222222],...
'BackgroundColor',[0.870588235294118 0.572549019607843 0.494117647058824],...
'Callback',@(hObject,eventdata)music_12_export('play_audio_Callback',hObject,eventdata,guidata(hObject)),...
'Children',[],...
'ButtonDownFcn',blanks(0),...
'CreateFcn', {@local_CreateFcn, blanks(0), appdata} ,...
'DeleteFcn',blanks(0),...
'Tag','play_audio',...
'KeyPressFcn',blanks(0),...
'FontSize',15,...
'FontWeight','bold');

appdata = [];
appdata.lastValidTag = 'compose_music';

h16 = uicontrol(...
'Parent',h1,...
'Units','characters',...
'FontUnits',get(0,'defaultuicontrolFontUnits'),...
'HorizontalAlignment',get(0,'defaultuicontrolHorizontalAlignment'),...
'ListboxTop',get(0,'defaultuicontrolListboxTop'),...
'Max',get(0,'defaultuicontrolMax'),...
'Min',get(0,'defaultuicontrolMin'),...
'SliderStep',get(0,'defaultuicontrolSliderStep'),...
'String','二.创作音乐',...
'Style',get(0,'defaultuicontrolStyle'),...
'Value',get(0,'defaultuicontrolValue'),...
'Position',[6.71428571428571 13.2222222222222 32.7142857142857 5.72222222222222],...
'BackgroundColor',[0.870588235294118 0.674509803921569 0.27843137254902],...
'Callback',@(hObject,eventdata)music_12_export('compose_music_Callback',hObject,eventdata,guidata(hObject)),...
'Children',[],...
'Tooltip',blanks(0),...
'ForegroundColor',get(0,'defaultuicontrolForegroundColor'),...
'Enable',get(0,'defaultuicontrolEnable'),...
'Visible',get(0,'defaultuicontrolVisible'),...
'HandleVisibility',get(0,'defaultuicontrolHandleVisibility'),...
'ButtonDownFcn',blanks(0),...
'CreateFcn', {@local_CreateFcn, blanks(0), appdata} ,...
'DeleteFcn',blanks(0),...
'Tag','compose_music',...
'UserData',[],...
'KeyPressFcn',blanks(0),...
'KeyReleaseFcn',blanks(0),...
'FontSize',15,...
'FontName',get(0,'defaultuicontrolFontName'),...
'FontAngle',get(0,'defaultuicontrolFontAngle'),...
'FontWeight','bold');

appdata = [];
appdata.lastValidTag = 'add_audio_file_path';

h17 = uicontrol(...
'Parent',h1,...
'Units','characters',...
'FontUnits',get(0,'defaultuicontrolFontUnits'),...
'String',blanks(0),...
'Style','listbox',...
'Value',1,...
'ValueMode',get(0,'defaultuicontrolValueMode'),...
'Position',[97.8571428571428 44.1111111111111 121 4.83333333333334],...
'BackgroundColor',[0.301960784313725 0.745098039215686 0.933333333333333],...
'Callback',@(hObject,eventdata)music_12_export('add_audio_file_path_Callback',hObject,eventdata,guidata(hObject)),...
'Children',[],...
'ButtonDownFcn',blanks(0),...
'CreateFcn', {@local_CreateFcn, @(hObject,eventdata)music_12_export('add_audio_file_path_CreateFcn',hObject,eventdata,guidata(hObject)), appdata} ,...
'DeleteFcn',blanks(0),...
'Tag','add_audio_file_path',...
'KeyPressFcn',blanks(0),...
'FontSize',14);

appdata = [];
appdata.lastValidTag = 'text2';

h18 = uicontrol(...
'Parent',h1,...
'Units','characters',...
'FontUnits',get(0,'defaultuicontrolFontUnits'),...
'String','最伟大的作品生成器',...
'Style','text',...
'Position',[4.14285714285714 50.5555555555556 164.142857142857 5.94444444444444],...
'BackgroundColor',[0 0.447058823529412 0.741176470588235],...
'Children',[],...
'CreateFcn', {@local_CreateFcn, blanks(0), appdata} ,...
'Tag','text2',...
'FontSize',50);

appdata = [];
appdata.lastValidTag = 'text3';

h19 = uicontrol(...
'Parent',h1,...
'Units','characters',...
'FontUnits',get(0,'defaultuicontrolFontUnits'),...
'String','谐波分量-频率+对应的n次谐波的强度',...
'Style','text',...
'Position',[105 34.4444444444444 101.285714285714 1.94444444444444],...
'BackgroundColor',[0.823529411764706 0.756862745098039 0.831372549019608],...
'Children',[],...
'ButtonDownFcn',blanks(0),...
'CreateFcn', {@local_CreateFcn, blanks(0), appdata} ,...
'DeleteFcn',blanks(0),...
'Tag','text3',...
'FontSize',15);

appdata = [];
appdata.lastValidTag = 'music_wave';

h20 = uicontrol(...
'Parent',h1,...
'Units','characters',...
'FontUnits',get(0,'defaultuicontrolFontUnits'),...
'HorizontalAlignment',get(0,'defaultuicontrolHorizontalAlignment'),...
'ListboxTop',get(0,'defaultuicontrolListboxTop'),...
'Max',get(0,'defaultuicontrolMax'),...
'Min',get(0,'defaultuicontrolMin'),...
'SliderStep',get(0,'defaultuicontrolSliderStep'),...
'String','原始音频波形',...
'Style','text',...
'Value',get(0,'defaultuicontrolValue'),...
'Position',[108 41.7777777777778 101.285714285714 1.94444444444444],...
'BackgroundColor',[0.823529411764706 0.756862745098039 0.831372549019608],...
'Callback',blanks(0),...
'Children',[],...
'Tooltip',blanks(0),...
'ForegroundColor',get(0,'defaultuicontrolForegroundColor'),...
'Enable',get(0,'defaultuicontrolEnable'),...
'Visible',get(0,'defaultuicontrolVisible'),...
'HandleVisibility',get(0,'defaultuicontrolHandleVisibility'),...
'ButtonDownFcn',blanks(0),...
'CreateFcn', {@local_CreateFcn, blanks(0), appdata} ,...
'DeleteFcn',blanks(0),...
'Tag','music_wave',...
'UserData',[],...
'KeyPressFcn',blanks(0),...
'KeyReleaseFcn',blanks(0),...
'FontSize',15,...
'FontName',get(0,'defaultuicontrolFontName'),...
'FontAngle',get(0,'defaultuicontrolFontAngle'),...
'FontWeight',get(0,'defaultuicontrolFontWeight'));

appdata = [];
appdata.lastValidTag = 'music_table';

h21 = uitable(...
'Parent',h1,...
'Units','characters',...
'Data',{  blanks(0) blanks(0); blanks(0) blanks(0); blanks(0) blanks(0); blanks(0) blanks(0) },...
'Position',[227.142857142857 20.9444444444444 35.7142857142857 5.44444444444444],...
'CellEditCallback',@(hObject,eventdata)music_12_export('music_table_CellEditCallback',hObject,eventdata,guidata(hObject)),...
'Children',[],...
'SelectionMode','manual',...
'CreateFcn', {@local_CreateFcn, @(hObject,eventdata)music_12_export('music_table_CreateFcn',hObject,eventdata,guidata(hObject)), appdata} ,...
'Tag','music_table',...
'FontSize',10,...
'Layout',[]);

appdata = [];
appdata.lastValidTag = 'table_file_path';

h22 = uicontrol(...
'Parent',h1,...
'Units','characters',...
'FontUnits',get(0,'defaultuicontrolFontUnits'),...
'String',blanks(0),...
'Style','listbox',...
'Value',1,...
'ValueMode',get(0,'defaultuicontrolValueMode'),...
'Position',[99.2857142857143 21.3333333333333 121 5.11111111111111],...
'BackgroundColor',[0.301960784313725 0.745098039215686 0.933333333333333],...
'Callback',@(hObject,eventdata)music_12_export('table_file_path_Callback',hObject,eventdata,guidata(hObject)),...
'Children',[],...
'ButtonDownFcn',blanks(0),...
'CreateFcn', {@local_CreateFcn, @(hObject,eventdata)music_12_export('table_file_path_CreateFcn',hObject,eventdata,guidata(hObject)), appdata} ,...
'DeleteFcn',blanks(0),...
'Tag','table_file_path',...
'KeyPressFcn',blanks(0),...
'FontSize',14);

appdata = [];
appdata.lastValidTag = 'text6';

h23 = uicontrol(...
'Parent',h1,...
'Units','characters',...
'FontUnits',get(0,'defaultuicontrolFontUnits'),...
'String','所选路径',...
'Style','text',...
'Position',[104 26.5555555555556 101.285714285714 1.94444444444444],...
'BackgroundColor',[0.823529411764706 0.756862745098039 0.831372549019608],...
'Children',[],...
'ButtonDownFcn',blanks(0),...
'CreateFcn', {@local_CreateFcn, blanks(0), appdata} ,...
'DeleteFcn',blanks(0),...
'Tag','text6',...
'FontSize',15);

appdata = [];
appdata.lastValidTag = 'tune';

h24 = uicontrol(...
'Parent',h1,...
'Units','characters',...
'FontUnits',get(0,'defaultuicontrolFontUnits'),...
'String','B',...
'Style','edit',...
'Position',[143.571428571429 14.1666666666667 33.1428571428571 3.83333333333333],...
'BackgroundColor',[0.870588235294118 0.572549019607843 0.494117647058824],...
'Callback',@(hObject,eventdata)music_12_export('tune_Callback',hObject,eventdata,guidata(hObject)),...
'Children',[],...
'CreateFcn', {@local_CreateFcn, @(hObject,eventdata)music_12_export('tune_CreateFcn',hObject,eventdata,guidata(hObject)), appdata} ,...
'Tag','tune',...
'FontSize',15);

appdata = [];
appdata.lastValidTag = 'text7';

h25 = uicontrol(...
'Parent',h1,...
'Units','characters',...
'FontUnits',get(0,'defaultuicontrolFontUnits'),...
'String','音调',...
'Style','text',...
'Position',[143.571428571429 17.9444444444444 33 1.94444444444444],...
'BackgroundColor',[0.823529411764706 0.756862745098039 0.831372549019608],...
'Children',[],...
'ButtonDownFcn',blanks(0),...
'CreateFcn', {@local_CreateFcn, blanks(0), appdata} ,...
'DeleteFcn',blanks(0),...
'Tag','text7',...
'FontSize',15);

appdata = [];
appdata.lastValidTag = 'length_of_beat';

h26 = uicontrol(...
'Parent',h1,...
'Units','characters',...
'FontUnits',get(0,'defaultuicontrolFontUnits'),...
'String','0.8',...
'Style','edit',...
'Position',[187.857142857143 14.1666666666667 33.1428571428571 3.83333333333333],...
'BackgroundColor',[0.870588235294118 0.572549019607843 0.494117647058824],...
'Callback',@(hObject,eventdata)music_12_export('length_of_beat_Callback',hObject,eventdata,guidata(hObject)),...
'Children',[],...
'ButtonDownFcn',blanks(0),...
'CreateFcn', {@local_CreateFcn, @(hObject,eventdata)music_12_export('length_of_beat_CreateFcn',hObject,eventdata,guidata(hObject)), appdata} ,...
'DeleteFcn',blanks(0),...
'Tag','length_of_beat',...
'KeyPressFcn',blanks(0),...
'FontSize',15);

appdata = [];
appdata.lastValidTag = 'text8';

h27 = uicontrol(...
'Parent',h1,...
'Units','characters',...
'FontUnits',get(0,'defaultuicontrolFontUnits'),...
'String','节拍长度',...
'Style','text',...
'Position',[187.857142857143 17.9444444444444 33 1.94444444444444],...
'BackgroundColor',[0.823529411764706 0.756862745098039 0.831372549019608],...
'Children',[],...
'ButtonDownFcn',blanks(0),...
'CreateFcn', {@local_CreateFcn, blanks(0), appdata} ,...
'DeleteFcn',blanks(0),...
'Tag','text8',...
'FontSize',15);

appdata = [];
appdata.lastValidTag = 'offset';

h28 = uicontrol(...
'Parent',h1,...
'Units','characters',...
'FontUnits',get(0,'defaultuicontrolFontUnits'),...
'String','1',...
'Style','edit',...
'Position',[100 4.33333333333333 33.1428571428571 3.83333333333333],...
'BackgroundColor',[0.929411764705882 0.72156862745098 0.949019607843137],...
'Callback',@(hObject,eventdata)music_12_export('offset_Callback',hObject,eventdata,guidata(hObject)),...
'Children',[],...
'ButtonDownFcn',blanks(0),...
'CreateFcn', {@local_CreateFcn, @(hObject,eventdata)music_12_export('offset_CreateFcn',hObject,eventdata,guidata(hObject)), appdata} ,...
'DeleteFcn',blanks(0),...
'Tag','offset',...
'KeyPressFcn',blanks(0),...
'FontSize',15);

appdata = [];
appdata.lastValidTag = 'text1';

h29 = uicontrol(...
'Parent',h1,...
'Units','characters',...
'FontUnits',get(0,'defaultuicontrolFontUnits'),...
'String','变调',...
'Style','text',...
'Position',[100 8.11111111111111 33 1.94444444444444],...
'BackgroundColor',[0.823529411764706 0.756862745098039 0.831372549019608],...
'Children',[],...
'ButtonDownFcn',blanks(0),...
'CreateFcn', {@local_CreateFcn, blanks(0), appdata} ,...
'DeleteFcn',blanks(0),...
'Tag','text1',...
'FontSize',15);

appdata = [];
appdata.lastValidTag = 'input_parameter_and_generate_music';

h30 = uicontrol(...
'Parent',h1,...
'Units','characters',...
'FontUnits',get(0,'defaultuicontrolFontUnits'),...
'String','2.输入参数生成作品',...
'Style',get(0,'defaultuicontrolStyle'),...
'Position',[49.2857142857143 12.6666666666667 36.5714285714286 5.72222222222222],...
'BackgroundColor',[0.870588235294118 0.572549019607843 0.494117647058824],...
'Callback',@(hObject,eventdata)music_12_export('input_parameter_and_generate_music_Callback',hObject,eventdata,guidata(hObject)),...
'Children',[],...
'ButtonDownFcn',blanks(0),...
'CreateFcn', {@local_CreateFcn, blanks(0), appdata} ,...
'DeleteFcn',blanks(0),...
'Tag','input_parameter_and_generate_music',...
'KeyPressFcn',blanks(0),...
'FontSize',15,...
'FontWeight','bold');

appdata = [];
appdata.lastValidTag = 'generate_wave_and_play_music';

h31 = uicontrol(...
'Parent',h1,...
'Units','characters',...
'FontUnits',get(0,'defaultuicontrolFontUnits'),...
'String','3.生成波形开始播放',...
'Style',get(0,'defaultuicontrolStyle'),...
'Position',[49.4285714285714 3.83333333333333 36.5714285714286 5.72222222222222],...
'BackgroundColor',[0.929411764705882 0.72156862745098 0.949019607843137],...
'Callback',@(hObject,eventdata)music_12_export('generate_wave_and_play_music_Callback',hObject,eventdata,guidata(hObject)),...
'Children',[],...
'ButtonDownFcn',blanks(0),...
'CreateFcn', {@local_CreateFcn, blanks(0), appdata} ,...
'DeleteFcn',blanks(0),...
'Tag','generate_wave_and_play_music',...
'KeyPressFcn',blanks(0),...
'FontSize',15,...
'FontWeight','bold');

appdata = [];
appdata.lastValidTag = 'frequency_sampling';

h32 = uicontrol(...
'Parent',h1,...
'Units','characters',...
'FontUnits',get(0,'defaultuicontrolFontUnits'),...
'String','8000',...
'Style','edit',...
'Position',[232.857142857143 14.1666666666667 33.1428571428572 3.83333333333333],...
'BackgroundColor',[0.870588235294118 0.572549019607843 0.494117647058824],...
'Callback',@(hObject,eventdata)music_12_export('frequency_sampling_Callback',hObject,eventdata,guidata(hObject)),...
'Children',[],...
'ButtonDownFcn',blanks(0),...
'CreateFcn', {@local_CreateFcn, @(hObject,eventdata)music_12_export('frequency_sampling_CreateFcn',hObject,eventdata,guidata(hObject)), appdata} ,...
'DeleteFcn',blanks(0),...
'Tag','frequency_sampling',...
'KeyPressFcn',blanks(0),...
'FontSize',15);

appdata = [];
appdata.lastValidTag = 'text4';

h33 = uicontrol(...
'Parent',h1,...
'Units','characters',...
'FontUnits',get(0,'defaultuicontrolFontUnits'),...
'String','采样频率',...
'Style','text',...
'Position',[233 17.6111111111111 33 1.94444444444444],...
'BackgroundColor',[0.823529411764706 0.756862745098039 0.831372549019608],...
'Children',[],...
'ButtonDownFcn',blanks(0),...
'CreateFcn', {@local_CreateFcn, blanks(0), appdata} ,...
'DeleteFcn',blanks(0),...
'Tag','text4',...
'FontSize',15);

appdata = [];
appdata.lastValidTag = 'text11';

h34 = uicontrol(...
'Parent',h1,...
'Units','characters',...
'FontUnits',get(0,'defaultuicontrolFontUnits'),...
'HorizontalAlignment',get(0,'defaultuicontrolHorizontalAlignment'),...
'ListboxTop',get(0,'defaultuicontrolListboxTop'),...
'Max',get(0,'defaultuicontrolMax'),...
'Min',get(0,'defaultuicontrolMin'),...
'SliderStep',get(0,'defaultuicontrolSliderStep'),...
'String','音乐波形',...
'Style','text',...
'Value',get(0,'defaultuicontrolValue'),...
'Position',[147.571428571429 9.05555555555556 101.285714285714 1.94444444444444],...
'BackgroundColor',[0.823529411764706 0.756862745098039 0.831372549019608],...
'Children',[],...
'Tooltip',blanks(0),...
'ForegroundColor',get(0,'defaultuicontrolForegroundColor'),...
'Enable',get(0,'defaultuicontrolEnable'),...
'Visible',get(0,'defaultuicontrolVisible'),...
'HandleVisibility',get(0,'defaultuicontrolHandleVisibility'),...
'ButtonDownFcn',blanks(0),...
'CreateFcn', {@local_CreateFcn, blanks(0), appdata} ,...
'DeleteFcn',blanks(0),...
'Tag','text11',...
'UserData',[],...
'FontSize',15,...
'FontName',get(0,'defaultuicontrolFontName'),...
'FontAngle',get(0,'defaultuicontrolFontAngle'),...
'FontWeight',get(0,'defaultuicontrolFontWeight'));

appdata = [];
appdata.lastValidTag = 'title_of_music';

h35 = uicontrol(...
'Parent',h1,...
'Units','characters',...
'FontUnits',get(0,'defaultuicontrolFontUnits'),...
'String','《最伟大的作品》',...
'Style','edit',...
'Position',[100 14.1666666666667 33.1428571428571 3.83333333333333],...
'BackgroundColor',[0.870588235294118 0.572549019607843 0.494117647058824],...
'Callback',@(hObject,eventdata)music_12_export('title_of_music_Callback',hObject,eventdata,guidata(hObject)),...
'Children',[],...
'ButtonDownFcn',blanks(0),...
'CreateFcn', {@local_CreateFcn, @(hObject,eventdata)music_12_export('title_of_music_CreateFcn',hObject,eventdata,guidata(hObject)), appdata} ,...
'DeleteFcn',blanks(0),...
'Tag','title_of_music',...
'KeyPressFcn',blanks(0),...
'FontSize',15);

appdata = [];
appdata.lastValidTag = 'text10';

h36 = uicontrol(...
'Parent',h1,...
'Units','characters',...
'FontUnits',get(0,'defaultuicontrolFontUnits'),...
'String','作品名称',...
'Style','text',...
'Position',[100 17.9444444444444 33 1.94444444444444],...
'BackgroundColor',[0.823529411764706 0.756862745098039 0.831372549019608],...
'Children',[],...
'ButtonDownFcn',blanks(0),...
'CreateFcn', {@local_CreateFcn, blanks(0), appdata} ,...
'DeleteFcn',blanks(0),...
'Tag','text10',...
'FontSize',15);

appdata = [];
appdata.lastValidTag = 'text14';

h37 = uicontrol(...
'Parent',h1,...
'Units','characters',...
'FontUnits',get(0,'defaultuicontrolFontUnits'),...
'String','song_pitch  song_length',...
'Style','text',...
'Position',[223 26.2222222222222 46 1.94444444444444],...
'BackgroundColor',[0.823529411764706 0.756862745098039 0.831372549019608],...
'Children',[],...
'ButtonDownFcn',blanks(0),...
'CreateFcn', {@local_CreateFcn, blanks(0), appdata} ,...
'DeleteFcn',blanks(0),...
'Tag','text14',...
'FontSize',12);

appdata = [];
appdata.lastValidTag = 'import_music_table';

h38 = uicontrol(...
'Parent',h1,...
'Units','characters',...
'FontUnits',get(0,'defaultuicontrolFontUnits'),...
'String','1.导入音乐表格',...
'Style',get(0,'defaultuicontrolStyle'),...
'Position',[49.5714285714286 21.0555555555556 36.5714285714286 5.72222222222222],...
'BackgroundColor',[0.301960784313725 0.745098039215686 0.933333333333333],...
'Callback',@(hObject,eventdata)music_12_export('import_music_table_Callback',hObject,eventdata,guidata(hObject)),...
'Children',[],...
'ButtonDownFcn',blanks(0),...
'CreateFcn', {@local_CreateFcn, blanks(0), appdata} ,...
'DeleteFcn',blanks(0),...
'Tag','import_music_table',...
'KeyPressFcn',blanks(0),...
'FontSize',15,...
'FontWeight','bold');

appdata = [];
appdata.lastValidTag = 'analysis_music';

h39 = uicontrol(...
'Parent',h1,...
'Units','characters',...
'FontUnits',get(0,'defaultuicontrolFontUnits'),...
'HorizontalAlignment',get(0,'defaultuicontrolHorizontalAlignment'),...
'ListboxTop',get(0,'defaultuicontrolListboxTop'),...
'Max',get(0,'defaultuicontrolMax'),...
'Min',get(0,'defaultuicontrolMin'),...
'SliderStep',get(0,'defaultuicontrolSliderStep'),...
'String','一.自动分析音频',...
'Style',get(0,'defaultuicontrolStyle'),...
'Value',get(0,'defaultuicontrolValue'),...
'Position',[6.57142857142857 35.3333333333333 32.7142857142857 5.72222222222222],...
'BackgroundColor',[0.870588235294118 0.674509803921569 0.27843137254902],...
'Callback',@(hObject,eventdata)music_12_export('analysis_music_Callback',hObject,eventdata,guidata(hObject)),...
'Children',[],...
'Tooltip',blanks(0),...
'ForegroundColor',get(0,'defaultuicontrolForegroundColor'),...
'Enable',get(0,'defaultuicontrolEnable'),...
'Visible',get(0,'defaultuicontrolVisible'),...
'HandleVisibility',get(0,'defaultuicontrolHandleVisibility'),...
'ButtonDownFcn',blanks(0),...
'CreateFcn', {@local_CreateFcn, blanks(0), appdata} ,...
'DeleteFcn',blanks(0),...
'Tag','analysis_music',...
'UserData',[],...
'KeyPressFcn',blanks(0),...
'FontSize',15,...
'FontName',get(0,'defaultuicontrolFontName'),...
'FontAngle',get(0,'defaultuicontrolFontAngle'),...
'FontWeight','bold');

appdata = [];
appdata.lastValidTag = 'text15';

h40 = uicontrol(...
'Parent',h1,...
'Units','characters',...
'FontUnits',get(0,'defaultuicontrolFontUnits'),...
'HorizontalAlignment',get(0,'defaultuicontrolHorizontalAlignment'),...
'ListboxTop',get(0,'defaultuicontrolListboxTop'),...
'Max',get(0,'defaultuicontrolMax'),...
'Min',get(0,'defaultuicontrolMin'),...
'SliderStep',get(0,'defaultuicontrolSliderStep'),...
'String','自动分析一段音频的音调和节拍，以及音频所包含的谐波分量，以及播放音频',...
'Style','text',...
'Value',get(0,'defaultuicontrolValue'),...
'Position',[6.85714285714286 42.1666666666667 34.1428571428571 6.94444444444444],...
'BackgroundColor',[0.823529411764706 0.756862745098039 0.831372549019608],...
'Children',[],...
'Tooltip',blanks(0),...
'ForegroundColor',get(0,'defaultuicontrolForegroundColor'),...
'Enable',get(0,'defaultuicontrolEnable'),...
'Visible',get(0,'defaultuicontrolVisible'),...
'HandleVisibility',get(0,'defaultuicontrolHandleVisibility'),...
'ButtonDownFcn',blanks(0),...
'CreateFcn', {@local_CreateFcn, blanks(0), appdata} ,...
'DeleteFcn',blanks(0),...
'Tag','text15',...
'UserData',[],...
'FontSize',15,...
'FontName',get(0,'defaultuicontrolFontName'),...
'FontAngle',get(0,'defaultuicontrolFontAngle'),...
'FontWeight',get(0,'defaultuicontrolFontWeight'));

appdata = [];
appdata.lastValidTag = 'text16';

h41 = uicontrol(...
'Parent',h1,...
'Units','characters',...
'FontUnits',get(0,'defaultuicontrolFontUnits'),...
'HorizontalAlignment',get(0,'defaultuicontrolHorizontalAlignment'),...
'ListboxTop',get(0,'defaultuicontrolListboxTop'),...
'Max',get(0,'defaultuicontrolMax'),...
'Min',get(0,'defaultuicontrolMin'),...
'SliderStep',get(0,'defaultuicontrolSliderStep'),...
'String','根据一个音乐的简谱生成音乐，并调整高八度或者低八度播放',...
'Style','text',...
'Value',get(0,'defaultuicontrolValue'),...
'Position',[6.71428571428571 19.3888888888889 34.1428571428571 5],...
'BackgroundColor',[0.823529411764706 0.756862745098039 0.831372549019608],...
'Children',[],...
'Tooltip',blanks(0),...
'ForegroundColor',get(0,'defaultuicontrolForegroundColor'),...
'Enable',get(0,'defaultuicontrolEnable'),...
'Visible',get(0,'defaultuicontrolVisible'),...
'HandleVisibility',get(0,'defaultuicontrolHandleVisibility'),...
'ButtonDownFcn',blanks(0),...
'CreateFcn', {@local_CreateFcn, blanks(0), appdata} ,...
'DeleteFcn',blanks(0),...
'Tag','text16',...
'UserData',[],...
'FontSize',15,...
'FontName',get(0,'defaultuicontrolFontName'),...
'FontAngle',get(0,'defaultuicontrolFontAngle'),...
'FontWeight',get(0,'defaultuicontrolFontWeight'));

appdata = [];
appdata.lastValidTag = 'text17';

h42 = uicontrol(...
'Parent',h1,...
'Units','characters',...
'FontUnits',get(0,'defaultuicontrolFontUnits'),...
'String','所生成音乐表格数据',...
'Style','text',...
'Position',[226.428571428571 27.9444444444444 38 1.94444444444444],...
'BackgroundColor',[0.823529411764706 0.756862745098039 0.831372549019608],...
'Children',[],...
'ButtonDownFcn',blanks(0),...
'CreateFcn', {@local_CreateFcn, blanks(0), appdata} ,...
'DeleteFcn',blanks(0),...
'Tag','text17',...
'FontSize',15);

appdata = [];
appdata.lastValidTag = 'text18';

h43 = uicontrol(...
'Parent',h1,...
'Units','characters',...
'FontUnits',get(0,'defaultuicontrolFontUnits'),...
'String','0.5-低八度 1-不变化 2-高八度',...
'Style','text',...
'Position',[89.8571428571428 2 48.8571428571428 1.94444444444444],...
'BackgroundColor',[0.823529411764706 0.756862745098039 0.831372549019608],...
'Children',[],...
'ButtonDownFcn',blanks(0),...
'CreateFcn', {@local_CreateFcn, blanks(0), appdata} ,...
'DeleteFcn',blanks(0),...
'Tag','text18',...
'FontSize',15);

appdata = [];
appdata.lastValidTag = 'text19';

h44 = uicontrol(...
'Parent',h1,...
'Units','characters',...
'FontUnits',get(0,'defaultuicontrolFontUnits'),...
'String','A/B/C/D/E/F/G',...
'Style','text',...
'Position',[145.428571428571 12 33 1.94444444444444],...
'BackgroundColor',[0.823529411764706 0.756862745098039 0.831372549019608],...
'Children',[],...
'ButtonDownFcn',blanks(0),...
'CreateFcn', {@local_CreateFcn, blanks(0), appdata} ,...
'DeleteFcn',blanks(0),...
'Tag','text19',...
'FontSize',15);

appdata = [];
appdata.lastValidTag = 'text20';

h45 = uicontrol(...
'Parent',h1,...
'Units','characters',...
'FontUnits',get(0,'defaultuicontrolFontUnits'),...
'String','0.5-1-2',...
'Style','text',...
'Position',[187.285714285714 12.1111111111111 33 1.94444444444444],...
'BackgroundColor',[0.823529411764706 0.756862745098039 0.831372549019608],...
'Children',[],...
'ButtonDownFcn',blanks(0),...
'CreateFcn', {@local_CreateFcn, blanks(0), appdata} ,...
'DeleteFcn',blanks(0),...
'Tag','text20',...
'FontSize',15);

appdata = [];
appdata.lastValidTag = 'text21';

h46 = uicontrol(...
'Parent',h1,...
'Units','characters',...
'FontUnits',get(0,'defaultuicontrolFontUnits'),...
'String','默认8000',...
'Style','text',...
'Position',[231.857142857143 11.8333333333333 33 1.94444444444444],...
'BackgroundColor',[0.823529411764706 0.756862745098039 0.831372549019608],...
'Children',[],...
'ButtonDownFcn',blanks(0),...
'CreateFcn', {@local_CreateFcn, blanks(0), appdata} ,...
'DeleteFcn',blanks(0),...
'Tag','text21',...
'FontSize',15);

appdata = [];
appdata.lastValidTag = 'text22';

h47 = uicontrol(...
'Parent',h1,...
'Units','characters',...
'FontUnits',get(0,'defaultuicontrolFontUnits'),...
'String','所选路径',...
'Style','text',...
'Position',[170 48.9444444444444 27.4285714285714 1.94444444444444],...
'BackgroundColor',[0.823529411764706 0.756862745098039 0.831372549019608],...
'Children',[],...
'ButtonDownFcn',blanks(0),...
'CreateFcn', {@local_CreateFcn, blanks(0), appdata} ,...
'DeleteFcn',blanks(0),...
'Tag','text22',...
'FontSize',15);

appdata = [];
appdata.lastValidTag = 'text23';

h48 = uicontrol(...
'Parent',h1,...
'Units','characters',...
'FontUnits',get(0,'defaultuicontrolFontUnits'),...
'String','by TX-Leo 2022.07.20',...
'Style','text',...
'Position',[172.428571428571 51.8333333333333 43.5714285714286 2.33333333333334],...
'BackgroundColor',[0.0745098039215686 0.623529411764706 1],...
'Children',[],...
'ButtonDownFcn',blanks(0),...
'CreateFcn', {@local_CreateFcn, blanks(0), appdata} ,...
'DeleteFcn',blanks(0),...
'Tag','text23',...
'FontSize',15);


hsingleton = h1;


% --- Set application data first then calling the CreateFcn. 
function local_CreateFcn(hObject, eventdata, createfcn, appdata)

if ~isempty(appdata)
   names = fieldnames(appdata);
   for i=1:length(names)
       name = char(names(i));
       setappdata(hObject, name, getfield(appdata,name));
   end
end

if ~isempty(createfcn)
   if isa(createfcn,'function_handle')
       createfcn(hObject, eventdata);
   else
       eval(createfcn);
   end
end


% --- Handles default GUIDE GUI creation and callback dispatch
function varargout = gui_mainfcn(gui_State, varargin)

gui_StateFields =  {'gui_Name'
    'gui_Singleton'
    'gui_OpeningFcn'
    'gui_OutputFcn'
    'gui_LayoutFcn'
    'gui_Callback'};
gui_Mfile = '';
for i=1:length(gui_StateFields)
    if ~isfield(gui_State, gui_StateFields{i})
        error(message('MATLAB:guide:StateFieldNotFound', gui_StateFields{ i }, gui_Mfile));
    elseif isequal(gui_StateFields{i}, 'gui_Name')
        gui_Mfile = [gui_State.(gui_StateFields{i}), '.m'];
    end
end

numargin = length(varargin);

if numargin == 0
    % MUSIC_12_EXPORT
    % create the GUI only if we are not in the process of loading it
    % already
    gui_Create = true;
elseif local_isInvokeActiveXCallback(gui_State, varargin{:})
    % MUSIC_12_EXPORT(ACTIVEX,...)
    vin{1} = gui_State.gui_Name;
    vin{2} = [get(varargin{1}.Peer, 'Tag'), '_', varargin{end}];
    vin{3} = varargin{1};
    vin{4} = varargin{end-1};
    vin{5} = guidata(varargin{1}.Peer);
    feval(vin{:});
    return;
elseif local_isInvokeHGCallback(gui_State, varargin{:})
    % MUSIC_12_EXPORT('CALLBACK',hObject,eventData,handles,...)
    gui_Create = false;
else
    % MUSIC_12_EXPORT(...)
    % create the GUI and hand varargin to the openingfcn
    gui_Create = true;
end

if ~gui_Create
    % In design time, we need to mark all components possibly created in
    % the coming callback evaluation as non-serializable. This way, they
    % will not be brought into GUIDE and not be saved in the figure file
    % when running/saving the GUI from GUIDE.
    designEval = false;
    if (numargin>1 && ishghandle(varargin{2}))
        fig = varargin{2};
        while ~isempty(fig) && ~ishghandle(fig,'figure')
            fig = get(fig,'parent');
        end
        
        designEval = isappdata(0,'CreatingGUIDEFigure') || (isscalar(fig)&&isprop(fig,'GUIDEFigure'));
    end
        
    if designEval
        beforeChildren = findall(fig);
    end
    
    % evaluate the callback now
    varargin{1} = gui_State.gui_Callback;
    if nargout
        [varargout{1:nargout}] = feval(varargin{:});
    else       
        feval(varargin{:});
    end
    
    % Set serializable of objects created in the above callback to off in
    % design time. Need to check whether figure handle is still valid in
    % case the figure is deleted during the callback dispatching.
    if designEval && ishghandle(fig)
        set(setdiff(findall(fig),beforeChildren), 'Serializable','off');
    end
else
    if gui_State.gui_Singleton
        gui_SingletonOpt = 'reuse';
    else
        gui_SingletonOpt = 'new';
    end

    % Check user passing 'visible' P/V pair first so that its value can be
    % used by oepnfig to prevent flickering
    gui_Visible = 'auto';
    gui_VisibleInput = '';
    for index=1:2:length(varargin)
        if length(varargin) == index || ~ischar(varargin{index})
            break;
        end

        % Recognize 'visible' P/V pair
        len1 = min(length('visible'),length(varargin{index}));
        len2 = min(length('off'),length(varargin{index+1}));
        if ischar(varargin{index+1}) && strncmpi(varargin{index},'visible',len1) && len2 > 1
            if strncmpi(varargin{index+1},'off',len2)
                gui_Visible = 'invisible';
                gui_VisibleInput = 'off';
            elseif strncmpi(varargin{index+1},'on',len2)
                gui_Visible = 'visible';
                gui_VisibleInput = 'on';
            end
        end
    end
    
    % Open fig file with stored settings.  Note: This executes all component
    % specific CreateFunctions with an empty HANDLES structure.

    
    % Do feval on layout code in m-file if it exists
    gui_Exported = ~isempty(gui_State.gui_LayoutFcn);
    % this application data is used to indicate the running mode of a GUIDE
    % GUI to distinguish it from the design mode of the GUI in GUIDE. it is
    % only used by actxproxy at this time.   
    setappdata(0,genvarname(['OpenGuiWhenRunning_', gui_State.gui_Name]),1);
    if gui_Exported
        gui_hFigure = feval(gui_State.gui_LayoutFcn, gui_SingletonOpt);

        % make figure invisible here so that the visibility of figure is
        % consistent in OpeningFcn in the exported GUI case
        if isempty(gui_VisibleInput)
            gui_VisibleInput = get(gui_hFigure,'Visible');
        end
        set(gui_hFigure,'Visible','off')

        % openfig (called by local_openfig below) does this for guis without
        % the LayoutFcn. Be sure to do it here so guis show up on screen.
        movegui(gui_hFigure,'onscreen');
    else
        gui_hFigure = local_openfig(gui_State.gui_Name, gui_SingletonOpt, gui_Visible);
        % If the figure has InGUIInitialization it was not completely created
        % on the last pass.  Delete this handle and try again.
        if isappdata(gui_hFigure, 'InGUIInitialization')
            delete(gui_hFigure);
            gui_hFigure = local_openfig(gui_State.gui_Name, gui_SingletonOpt, gui_Visible);
        end
    end
    if isappdata(0, genvarname(['OpenGuiWhenRunning_', gui_State.gui_Name]))
        rmappdata(0,genvarname(['OpenGuiWhenRunning_', gui_State.gui_Name]));
    end

    % Set flag to indicate starting GUI initialization
    setappdata(gui_hFigure,'InGUIInitialization',1);

    % Fetch GUIDE Application options
    gui_Options = getappdata(gui_hFigure,'GUIDEOptions');
    % Singleton setting in the GUI MATLAB code file takes priority if different
    gui_Options.singleton = gui_State.gui_Singleton;

    if ~isappdata(gui_hFigure,'GUIOnScreen')
        % Adjust background color
        if gui_Options.syscolorfig
            set(gui_hFigure,'Color', get(0,'DefaultUicontrolBackgroundColor'));
        end

        % Generate HANDLES structure and store with GUIDATA. If there is
        % user set GUI data already, keep that also.
        data = guidata(gui_hFigure);
        handles = guihandles(gui_hFigure);
        if ~isempty(handles)
            if isempty(data)
                data = handles;
            else
                names = fieldnames(handles);
                for k=1:length(names)
                    data.(char(names(k)))=handles.(char(names(k)));
                end
            end
        end
        guidata(gui_hFigure, data);
    end

    % Apply input P/V pairs other than 'visible'
    for index=1:2:length(varargin)
        if length(varargin) == index || ~ischar(varargin{index})
            break;
        end

        len1 = min(length('visible'),length(varargin{index}));
        if ~strncmpi(varargin{index},'visible',len1)
            try set(gui_hFigure, varargin{index}, varargin{index+1}), catch break, end
        end
    end

    % If handle visibility is set to 'callback', turn it on until finished
    % with OpeningFcn
    gui_HandleVisibility = get(gui_hFigure,'HandleVisibility');
    if strcmp(gui_HandleVisibility, 'callback')
        set(gui_hFigure,'HandleVisibility', 'on');
    end

    feval(gui_State.gui_OpeningFcn, gui_hFigure, [], guidata(gui_hFigure), varargin{:});

    if isscalar(gui_hFigure) && ishghandle(gui_hFigure)
        % Handle the default callbacks of predefined toolbar tools in this
        % GUI, if any
        guidemfile('restoreToolbarToolPredefinedCallback',gui_hFigure); 
        
        % Update handle visibility
        set(gui_hFigure,'HandleVisibility', gui_HandleVisibility);

        % Call openfig again to pick up the saved visibility or apply the
        % one passed in from the P/V pairs
        if ~gui_Exported
            gui_hFigure = local_openfig(gui_State.gui_Name, 'reuse',gui_Visible);
        elseif ~isempty(gui_VisibleInput)
            set(gui_hFigure,'Visible',gui_VisibleInput);
        end
        if strcmpi(get(gui_hFigure, 'Visible'), 'on')
            figure(gui_hFigure);
            
            if gui_Options.singleton
                setappdata(gui_hFigure,'GUIOnScreen', 1);
            end
        end

        % Done with GUI initialization
        if isappdata(gui_hFigure,'InGUIInitialization')
            rmappdata(gui_hFigure,'InGUIInitialization');
        end

        % If handle visibility is set to 'callback', turn it on until
        % finished with OutputFcn
        gui_HandleVisibility = get(gui_hFigure,'HandleVisibility');
        if strcmp(gui_HandleVisibility, 'callback')
            set(gui_hFigure,'HandleVisibility', 'on');
        end
        gui_Handles = guidata(gui_hFigure);
    else
        gui_Handles = [];
    end

    if nargout
        [varargout{1:nargout}] = feval(gui_State.gui_OutputFcn, gui_hFigure, [], gui_Handles);
    else
        feval(gui_State.gui_OutputFcn, gui_hFigure, [], gui_Handles);
    end

    if isscalar(gui_hFigure) && ishghandle(gui_hFigure)
        set(gui_hFigure,'HandleVisibility', gui_HandleVisibility);
    end
end

function gui_hFigure = local_openfig(name, singleton, visible)

% openfig with three arguments was new from R13. Try to call that first, if
% failed, try the old openfig.
if nargin('openfig') == 2
    % OPENFIG did not accept 3rd input argument until R13,
    % toggle default figure visible to prevent the figure
    % from showing up too soon.
    gui_OldDefaultVisible = get(0,'defaultFigureVisible');
    set(0,'defaultFigureVisible','off');
    gui_hFigure = matlab.hg.internal.openfigLegacy(name, singleton);
    set(0,'defaultFigureVisible',gui_OldDefaultVisible);
else
    % Call version of openfig that accepts 'auto' option"
    gui_hFigure = matlab.hg.internal.openfigLegacy(name, singleton, visible);  
%     %workaround for CreateFcn not called to create ActiveX
%         peers=findobj(findall(allchild(gui_hFigure)),'type','uicontrol','style','text');    
%         for i=1:length(peers)
%             if isappdata(peers(i),'Control')
%                 actxproxy(peers(i));
%             end            
%         end
end

function result = local_isInvokeActiveXCallback(gui_State, varargin)

try
    result = ispc && iscom(varargin{1}) ...
             && isequal(varargin{1},gcbo);
catch
    result = false;
end

function result = local_isInvokeHGCallback(gui_State, varargin)

try
    fhandle = functions(gui_State.gui_Callback);
    result = ~isempty(findstr(gui_State.gui_Name,fhandle.file)) || ...
             (ischar(varargin{1}) ...
             && isequal(ishghandle(varargin{2}), 1) ...
             && (~isempty(strfind(varargin{1},[get(varargin{2}, 'Tag'), '_'])) || ...
                ~isempty(strfind(varargin{1}, '_CreateFcn'))) );
catch
    result = false;
end


